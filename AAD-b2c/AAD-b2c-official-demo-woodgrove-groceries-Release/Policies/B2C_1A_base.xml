<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TrustFrameworkPolicy PolicySchemaVersion="0.3.0.0" TenantId="yourtenant.onmicrosoft.com" PolicyId="B2C_1A_base" PublicPolicyUri="http://yourtenant.onmicrosoft.com/B2C_1A_base" 
  xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" 
  xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <BuildingBlocks>

    <ClaimsSchema>

      <ClaimType Id="alternativeSecurityId">
        <DisplayName>Alternative Security ID</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="authenticationSource">
        <DisplayName>Authentication Source</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="clientId">
        <DisplayName>Client Identifier</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="clientIpAddress">
        <DisplayName>Client IP Address</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="correlationId">
        <DisplayName>Correlation Id</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="culture">
        <DisplayName>Culture</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="displayName">
        <DisplayName>Display Name</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="name" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="name" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name" />
        </DefaultPartnerClaimTypes>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>

      <ClaimType Id="email">
        <DisplayName>Email Address</DisplayName>
        <DataType>string</DataType>
        <UserInputType>TextBox</UserInputType>
        <Restriction>
          <Pattern RegularExpression="^[a-zA-Z0-9.!#$%&amp;'^_`{}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$" HelpText="Enter a valid email address." />
        </Restriction>
      </ClaimType>

      <ClaimType Id="eventName">
        <DisplayName>Event Name</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="identityProvider">
        <DisplayName>Identity Provider</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="idp" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="idp" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.microsoft.com/identity/claims/identityprovider" />
        </DefaultPartnerClaimTypes>
      </ClaimType>

      <ClaimType Id="jobTitle">
        <DisplayName>Job Title</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="job_title" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="job_title" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.microsoft.com/identity/claims/jobtitle" />
        </DefaultPartnerClaimTypes>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>

      <ClaimType Id="loginHint">
        <DisplayName>Login Hint</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="mailNickname">
        <DisplayName>Mail Nickname</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="newPassword">
        <DisplayName>New Password</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Password</UserInputType>
        <Restriction>
          <Pattern RegularExpression="^((?=.*[a-z])(?=.*[A-Z])(?=.*\d)|(?=.*[a-z])(?=.*[A-Z])(?=.*[^A-Za-z0-9])|(?=.*[a-z])(?=.*\d)(?=.*[^A-Za-z0-9])|(?=.*[A-Z])(?=.*\d)(?=.*[^A-Za-z0-9]))([A-Za-z\d@#$%^&amp;*\-_+=[\]{}|\\:',?/`~&quot;();!]|\.(?!@)){8,16}$" HelpText="8-16 characters, containing 3 out of 4 of the following: Lowercase characters, uppercase characters, digits (0-9), and one or more of the following symbols: @ # $ % ^ &amp; * - _ + = [ ] { } | \ : ' , ? / ` ~ &quot; ( ) ; ." />
        </Restriction>
      </ClaimType>

      <ClaimType Id="newUser">
        <DisplayName>New User</DisplayName>
        <DataType>boolean</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="new_user" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="new_user" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.microsoft.com/identity/claims/newuser" />
        </DefaultPartnerClaimTypes>
      </ClaimType>

      <ClaimType Id="objectId">
        <DisplayName>Object Identifier</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="oid" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="oid" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.microsoft.com/identity/claims/objectidentifier" />
        </DefaultPartnerClaimTypes>
      </ClaimType>

      <ClaimType Id="otherMails">
        <DisplayName>Alternate Email Addresses</DisplayName>
        <DataType>stringCollection</DataType>
      </ClaimType>

      <ClaimType Id="password">
        <DisplayName>Password</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Password</UserInputType>
      </ClaimType>

      <ClaimType Id="passwordPolicies">
        <DisplayName>Password Policies</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="policyId">
        <DisplayName>Policy Identifier</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="reenterPassword">
        <DisplayName>Confirm New Password</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Password</UserInputType>
        <Restriction>
          <Pattern RegularExpression="^((?=.*[a-z])(?=.*[A-Z])(?=.*\d)|(?=.*[a-z])(?=.*[A-Z])(?=.*[^A-Za-z0-9])|(?=.*[a-z])(?=.*\d)(?=.*[^A-Za-z0-9])|(?=.*[A-Z])(?=.*\d)(?=.*[^A-Za-z0-9]))([A-Za-z\d@#$%^&amp;*\-_+=[\]{}|\\:',?/`~&quot;();!]|\.(?!@)){8,16}$" HelpText=" " />
        </Restriction>
      </ClaimType>

      <ClaimType Id="refreshTokenIssuedOnDateTime">
        <DisplayName>Refresh Token Issued On Date Time</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="refreshTokensValidFromDateTime">
        <DisplayName>Refresh Token Valid From Date Time</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="signInName">
        <DisplayName>Sign-in name</DisplayName>
        <DataType>string</DataType>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>

      <ClaimType Id="tenantId">
        <DisplayName>Tenant Identifier</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="tid" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="tid" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.microsoft.com/identity/claims/tenantidentifier" />
        </DefaultPartnerClaimTypes>
      </ClaimType>

      <ClaimType Id="trustFrameworkPolicy">
        <DisplayName>Trust Framework Policy</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="tfp" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="tfp" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.vicroads.vic.gov.au/identity/claims/trustframeworkpolicy" />
        </DefaultPartnerClaimTypes>
      </ClaimType>

      <ClaimType Id="userId">
        <DisplayName>User ID</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="userName">
        <DisplayName>User Name</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="userPrincipalName">
        <DisplayName>User Principal Name</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="upn" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="upn" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn" />
        </DefaultPartnerClaimTypes>
      </ClaimType>

      <ClaimType Id="grantType">
        <DisplayName>Grant Type</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="hasAzureActiveDirectorySSOSession">
        <DisplayName>Has Azure Active Directory Session</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="nca">
        <DisplayName>NCA</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="scope">
        <DisplayName>Scope</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="termsOfServiceConsentRequired">
        <DisplayName>Terms of Service Consent Required</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="extension_AgreedToTermsOfService">
        <DisplayName>Agreed To Terms Of Service</DisplayName>
        <DataType>string</DataType>
        <UserInputType>CheckboxMultiSelect</UserInputType>
        <Restriction>
          <Enumeration Text="I agree to the WoodGrove terms of service" Value="True" />
        </Restriction>
      </ClaimType>

      <ClaimType Id="extension_BusinessCustomerRole">
        <DisplayName>Business Customer Role</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="business_customer_role" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="business_customer_role" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.microsoft.com/identity/claims/businesscustomerrole" />
        </DefaultPartnerClaimTypes>
      </ClaimType>

      <ClaimType Id="extension_CustomerType">
        <DisplayName>Customer Type</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="extension_OrganizationDisplayName">
        <DisplayName>Organization Display Name</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="organization_name" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="organization_name" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.microsoft.com/identity/claims/organizationname" />
        </DefaultPartnerClaimTypes>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>

      <ClaimType Id="extension_TermsOfServiceConsentDateTime">
        <DisplayName>Terms of Service Consent Date Time</DisplayName>
        <DataType>dateTime</DataType>
      </ClaimType>

      <ClaimType Id="resource">
        <DisplayName>Resource</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="extension_PhoneNumber">
        <DisplayName>Phone Number</DisplayName>
        <DataType>string</DataType>
        <Mask Type="Simple">XXX-XXX-</Mask>
        <UserHelpText>Your telephone number</UserHelpText>
        <UserInputType>TextBox</UserInputType>
        <Restriction>
          <Pattern RegularExpression="^\+[0-9]{7,15}$" HelpText="Please enter a valid phone number." />
        </Restriction>
      </ClaimType>

      <ClaimType Id="extension_IsPhoneNumberVerified">
        <DisplayName>Phone Number Verified</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="Verified.strongAuthenticationPhoneNumber">
        <DisplayName>Verified Phone Number</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OpenIdConnect" PartnerClaimType="phone_number" />
        </DefaultPartnerClaimTypes>
        <Mask Type="Simple">XXX-XXX-</Mask>
        <UserHelpText>Your office phone number that has been verified</UserHelpText>
      </ClaimType>

      <ClaimType Id="newPhoneNumberEntered">
        <DisplayName>New Phone Number Entered</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="userIdForMFA">
        <DisplayName>UserId for MFA</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="isActiveMFASession">
        <DisplayName>isActiveMFASession</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>Parameter provided by the MFA session management to indicate that the user has an active MFA session.</UserHelpText>
      </ClaimType>

      <ClaimType Id="isActiveLoginMFASession">
        <DisplayName>isActiveLoginMFASession</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>Parameter provided by the MFA session management to indicate that the user has an active MFA session.</UserHelpText>
      </ClaimType>

      <ClaimType Id="extension_Allergens">
        <DisplayName>Please indicate any allergies you have</DisplayName>
        <DataType>string</DataType>
        <UserInputType>CheckboxMultiSelect</UserInputType>
        <Restriction>
          <Enumeration Text="Dairy" Value="Dairy" SelectByDefault="false" />
          <Enumeration Text="Nuts " Value="Nuts" SelectByDefault="false" />
          <Enumeration Text="Gluten" Value="Gluten" SelectByDefault="false" />
        </Restriction>
      </ClaimType>

      <ClaimType Id="extension_AllergensRemindMeLater">
        <DisplayName>Remind user to add allergen details later</DisplayName>
        <DataType>boolean</DataType>
        <UserInputType>CheckboxMultiSelect</UserInputType>
        <Restriction>
          <Enumeration Text="Remind Me Later" Value="true" SelectByDefault="false"/>
        </Restriction>
      </ClaimType>

      <ClaimType Id="extension_IsAllergensAdded">
        <DisplayName>Claim to indicate whether allergens added</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>Claim to indicate whether allergens added</UserHelpText>
      </ClaimType>

      <ClaimType Id="extension_UserConsentToShareAllergyInfo">
        <DisplayName>Consent to share information</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>To store user consent to share allergy information.</UserHelpText>
      </ClaimType>

      <ClaimType Id="consentToShareAllergyInfo">
        <DisplayName>Consent to share information</DisplayName>
        <DataType>boolean</DataType>
        <UserInputType>CheckboxMultiSelect</UserInputType>
        <Restriction>
          <Enumeration Text="I permit Woodgrove Groceries to share my allergy information with their suppliers so that I get more customized shopping recommendations" Value="true" SelectByDefault="false"/>
        </Restriction>
      </ClaimType>

      <ClaimType Id="extension_SocialAccountLinked">
        <DisplayName>SocialAccountLinked</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>Parameter to indicate that any social acccount is linked with the account.</UserHelpText>
      </ClaimType>

      <ClaimType Id="identityProviderAccessToken">
        <DisplayName>Identity Provider Access Token</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Stores the access token of the identity provider.</AdminHelpText>
      </ClaimType>

      <ClaimType Id="TermsAndCondition">
        <DisplayName>WoodGrove terms of service</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>A claim responsible for showing terms and conditions</AdminHelpText>
        <UserHelpText>A claim responsible for showing terms and conditions</UserHelpText>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>

      <ClaimType Id="extension_AccountNumber">
        <DisplayName>Account Id</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>A claim representing user's account Id</AdminHelpText>
        <UserHelpText>user's account Id</UserHelpText>
        <UserInputType>TextBox</UserInputType>
        <Restriction>
          <Pattern RegularExpression="^([0-9]){6}$" HelpText="Enter 6 digit account number." />
        </Restriction>
      </ClaimType>

      <ClaimType Id="extension_GroupName">
        <DisplayName>Pick a nickname for the users of your Woodgrove account. For example, ‘The Smith Family’</DisplayName>
        <DataType>string</DataType>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>

      <ClaimType Id="extension_UserEmailToInvite">
        <DisplayName>Invite others to share your Woodgrove account</DisplayName>
        <DataType>string</DataType>
        <UserInputType>TextBox</UserInputType>
        <Restriction>
          <Pattern RegularExpression="^[a-zA-Z0-9.!#$%&amp;'^_`{}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$" HelpText="Enter a valid email address." />
        </Restriction>
      </ClaimType>

      <ClaimType Id="ProfileCompletion">
        <DisplayName>ProfileCompletion</DisplayName>
        <DataType>int</DataType>
        <UserHelpText>A claim representing Profile Completion Percentage</UserHelpText>
      </ClaimType>

      <ClaimType Id="newAllergyDetails">
        <DisplayName>newAllergyDetails</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>A claim indicates allergy details updated in the same login. Used for progressive profiling.</UserHelpText>
      </ClaimType>

      <ClaimType Id="fromMailAddress">
        <DisplayName>From Mail Address</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="invitedEmail">
        <DisplayName>Email Address</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Readonly</UserInputType>
        <Restriction>
          <Pattern RegularExpression="^[a-zA-Z0-9.!#$%&amp;'^_`{}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$" HelpText="Enter a valid email address." />
        </Restriction>
      </ClaimType>

      <ClaimType Id="invitedAccountId">
        <DisplayName>Account Id</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="invitedGroupId">
        <DisplayName>Group Id</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="isForgotUserNameFlow">
        <DisplayName>Is Forgot UserName Flow</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="userMessage">
        <DisplayName></DisplayName>
        <DataType>string</DataType>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>

      <!-- Age Gating Claims -->
      <ClaimType Id="legalCountry">
        <DisplayName>Country of Residence</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" PartnerClaimType="extension_legalCountry" />
        </DefaultPartnerClaimTypes>
        <UserHelpText>The country in which you legally reside.</UserHelpText>
        <UserInputType>DropdownSingleSelect</UserInputType>
        <Restriction MergeBehavior="Append">
          <!-- The following is the approved ISO short-form Microsoft country list, taken from https://microsoft.sharepoint.com/teams/celaGlobalReadiness/Lists/CountryRegion/CountryRegionList.aspx -->
          <Enumeration Text="Afghanistan" Value="AF" />
          <Enumeration Text="Åland Islands" Value="AX" />
          <Enumeration Text="Albania" Value="AL" />
          <Enumeration Text="Algeria" Value="DZ" />
          <Enumeration Text="American Samoa" Value="AS" />
          <Enumeration Text="Andorra" Value="AD" />
          <Enumeration Text="Angola" Value="AO" />
          <Enumeration Text="Anguilla" Value="AI" />
          <Enumeration Text="Antarctica" Value="AQ" />
          <Enumeration Text="Antigua and Barbuda" Value="AG" />
          <Enumeration Text="Argentina" Value="AR" />
          <Enumeration Text="Armenia" Value="AM" />
          <Enumeration Text="Aruba" Value="AW" />
          <Enumeration Text="Australia" Value="AU" />
          <Enumeration Text="Austria" Value="AT" />
          <Enumeration Text="Azerbaijan" Value="AZ" />
          <Enumeration Text="Bahamas" Value="BS" />
          <Enumeration Text="Bahrain" Value="BH" />
          <Enumeration Text="Bangladesh" Value="BD" />
          <Enumeration Text="Barbados" Value="BB" />
          <Enumeration Text="Belarus" Value="BY" />
          <Enumeration Text="Belgium" Value="BE" />
          <Enumeration Text="Belize" Value="BZ" />
          <Enumeration Text="Benin" Value="BJ" />
          <Enumeration Text="Bermuda" Value="BM" />
          <Enumeration Text="Bhutan" Value="BT" />
          <Enumeration Text="Bolivia" Value="BO" />
          <Enumeration Text="Bonaire" Value="BQ" />
          <Enumeration Text="Bosnia and Herzegovina" Value="BA" />
          <Enumeration Text="Botswana" Value="BW" />
          <Enumeration Text="Bouvet Island" Value="BV" />
          <Enumeration Text="Brazil" Value="BR" />
          <Enumeration Text="British Indian Ocean Territory" Value="IO" />
          <Enumeration Text="British Virgin Islands" Value="VG" />
          <Enumeration Text="Brunei" Value="BN" />
          <Enumeration Text="Bulgaria" Value="BG" />
          <Enumeration Text="Burkina Faso" Value="BF" />
          <Enumeration Text="Burundi" Value="BI" />
          <Enumeration Text="Cabo Verde" Value="CV" />
          <Enumeration Text="Cambodia" Value="KH" />
          <Enumeration Text="Cameroon" Value="CM" />
          <Enumeration Text="Canada" Value="CA" />
          <Enumeration Text="Cayman Islands" Value="KY" />
          <Enumeration Text="Central African Republic" Value="CF" />
          <Enumeration Text="Chad" Value="TD" />
          <Enumeration Text="Chile" Value="CL" />
          <Enumeration Text="China" Value="CN" />
          <Enumeration Text="Christmas Island" Value="CX" />
          <Enumeration Text="Cocos (Keeling) Islands" Value="CC" />
          <Enumeration Text="Colombia" Value="CO" />
          <Enumeration Text="Comoros" Value="KM" />
          <Enumeration Text="Congo" Value="CG" />
          <Enumeration Text="Congo (DRC)" Value="CD" />
          <Enumeration Text="Cook Islands" Value="CK" />
          <Enumeration Text="Costa Rica" Value="CR" />
          <Enumeration Text="Côte d’Ivoire" Value="CI" />
          <Enumeration Text="Croatia" Value="HR" />
          <Enumeration Text="Cuba" Value="CU" />
          <Enumeration Text="Curaçao" Value="CW" />
          <Enumeration Text="Cyprus" Value="CY" />
          <Enumeration Text="Czech Republic" Value="CZ" />
          <Enumeration Text="Denmark" Value="DK" />
          <Enumeration Text="Djibouti" Value="DJ" />
          <Enumeration Text="Dominica" Value="DM" />
          <Enumeration Text="Dominican Republic" Value="DO" />
          <Enumeration Text="Ecuador" Value="EC" />
          <Enumeration Text="Egypt" Value="EG" />
          <Enumeration Text="El Salvador" Value="SV" />
          <Enumeration Text="Equatorial Guinea" Value="GQ" />
          <Enumeration Text="Eritrea" Value="ER" />
          <Enumeration Text="Estonia" Value="EE" />
          <Enumeration Text="Ethiopia" Value="ET" />
          <Enumeration Text="Falkland Islands" Value="FK" />
          <Enumeration Text="Faroe Islands" Value="FO" />
          <Enumeration Text="Fiji" Value="FJ" />
          <Enumeration Text="Finland" Value="FI" />
          <Enumeration Text="France" Value="FR" />
          <Enumeration Text="French Guiana" Value="GF" />
          <Enumeration Text="French Polynesia" Value="PF" />
          <Enumeration Text="French Southern Territories" Value="TF" />
          <Enumeration Text="Gabon" Value="GA" />
          <Enumeration Text="Gambia" Value="GM" />
          <Enumeration Text="Georgia" Value="GE" />
          <Enumeration Text="Germany" Value="DE" />
          <Enumeration Text="Ghana" Value="GH" />
          <Enumeration Text="Gibraltar" Value="GI" />
          <Enumeration Text="Greece" Value="GR" />
          <Enumeration Text="Greenland" Value="GL" />
          <Enumeration Text="Grenada" Value="GD" />
          <Enumeration Text="Guadeloupe" Value="GP" />
          <Enumeration Text="Guam" Value="GU" />
          <Enumeration Text="Guatemala" Value="GT" />
          <Enumeration Text="Guernsey" Value="GG" />
          <Enumeration Text="Guinea" Value="GN" />
          <Enumeration Text="Guinea-Bissau" Value="GW" />
          <Enumeration Text="Guyana" Value="GY" />
          <Enumeration Text="Haiti" Value="HT" />
          <Enumeration Text="Heard Island and McDonald Islands" Value="HM" />
          <Enumeration Text="Honduras" Value="HN" />
          <Enumeration Text="Hong Kong SAR" Value="HK" />
          <Enumeration Text="Hungary" Value="HU" />
          <Enumeration Text="Iceland" Value="IS" />
          <Enumeration Text="India" Value="IN" />
          <Enumeration Text="Indonesia" Value="ID" />
          <Enumeration Text="Iran" Value="IR" />
          <Enumeration Text="Iraq" Value="IQ" />
          <Enumeration Text="Ireland" Value="IE" />
          <Enumeration Text="Isle of Man" Value="IM" />
          <Enumeration Text="Israel" Value="IL" />
          <Enumeration Text="Italy" Value="IT" />
          <Enumeration Text="Jamaica" Value="JM" />
          <Enumeration Text="Jan Mayen" Value="XJ" />
          <Enumeration Text="Japan" Value="JP" />
          <Enumeration Text="Jersey" Value="JE" />
          <Enumeration Text="Jordan" Value="JO" />
          <Enumeration Text="Kazakhstan" Value="KZ" />
          <Enumeration Text="Kenya" Value="KE" />
          <Enumeration Text="Kiribati" Value="KI" />
          <Enumeration Text="Korea" Value="KR" />
          <Enumeration Text="Kosovo" Value="XK" />
          <Enumeration Text="Kuwait" Value="KW" />
          <Enumeration Text="Kyrgyzstan" Value="KG" />
          <Enumeration Text="Laos" Value="LA" />
          <Enumeration Text="Latvia" Value="LV" />
          <Enumeration Text="Lebanon" Value="LB" />
          <Enumeration Text="Lesotho" Value="LS" />
          <Enumeration Text="Liberia" Value="LR" />
          <Enumeration Text="Libya" Value="LY" />
          <Enumeration Text="Liechtenstein" Value="LI" />
          <Enumeration Text="Lithuania" Value="LT" />
          <Enumeration Text="Luxembourg" Value="LU" />
          <Enumeration Text="Macao SAR" Value="MO" />
          <Enumeration Text="Macedonia, FYRO" Value="MK" />
          <Enumeration Text="Madagascar" Value="MG" />
          <Enumeration Text="Malawi" Value="MW" />
          <Enumeration Text="Malaysia" Value="MY" />
          <Enumeration Text="Maldives" Value="MV" />
          <Enumeration Text="Mali" Value="ML" />
          <Enumeration Text="Malta" Value="MT" />
          <Enumeration Text="Marshall Islands" Value="MH" />
          <Enumeration Text="Martinique" Value="MQ" />
          <Enumeration Text="Mauritania" Value="MR" />
          <Enumeration Text="Mauritius" Value="MU" />
          <Enumeration Text="Mayotte" Value="YT" />
          <Enumeration Text="Mexico" Value="MX" />
          <Enumeration Text="Micronesia" Value="FM" />
          <Enumeration Text="Moldova" Value="MD" />
          <Enumeration Text="Monaco" Value="MC" />
          <Enumeration Text="Mongolia" Value="MN" />
          <Enumeration Text="Montenegro" Value="ME" />
          <Enumeration Text="Montserrat" Value="MS" />
          <Enumeration Text="Morocco" Value="MA" />
          <Enumeration Text="Mozambique" Value="MZ" />
          <Enumeration Text="Myanmar" Value="MM" />
          <Enumeration Text="Namibia" Value="NA" />
          <Enumeration Text="Nauru" Value="NR" />
          <Enumeration Text="Nepal" Value="NP" />
          <Enumeration Text="Netherlands" Value="NL" />
          <Enumeration Text="New Caledonia" Value="NC" />
          <Enumeration Text="New Zealand" Value="NZ" />
          <Enumeration Text="Nicaragua" Value="NI" />
          <Enumeration Text="Niger" Value="NE" />
          <Enumeration Text="Nigeria" Value="NG" />
          <Enumeration Text="Niue" Value="NU" />
          <Enumeration Text="Norfolk Island" Value="NF" />
          <Enumeration Text="North Korea" Value="KP" />
          <Enumeration Text="Northern Mariana Islands" Value="MP" />
          <Enumeration Text="Norway" Value="NO" />
          <Enumeration Text="Oman" Value="OM" />
          <Enumeration Text="Pakistan" Value="PK" />
          <Enumeration Text="Palau" Value="PW" />
          <Enumeration Text="Palestinian Authority" Value="PS" />
          <Enumeration Text="Panama" Value="PA" />
          <Enumeration Text="Papua New Guinea" Value="PG" />
          <Enumeration Text="Paraguay" Value="PY" />
          <Enumeration Text="Peru" Value="PE" />
          <Enumeration Text="Philippines" Value="PH" />
          <Enumeration Text="Pitcairn Islands" Value="PN" />
          <Enumeration Text="Poland" Value="PL" />
          <Enumeration Text="Portugal" Value="PT" />
          <Enumeration Text="Puerto Rico" Value="PR" />
          <Enumeration Text="Qatar" Value="QA" />
          <Enumeration Text="Réunion" Value="RE" />
          <Enumeration Text="Romania" Value="RO" />
          <Enumeration Text="Russia" Value="RU" />
          <Enumeration Text="Rwanda" Value="RW" />
          <Enumeration Text="Saba" Value="XS" />
          <Enumeration Text="Saint Barthélemy" Value="BL" />
          <Enumeration Text="Saint Kitts and Nevis" Value="KN" />
          <Enumeration Text="Saint Lucia" Value="LC" />
          <Enumeration Text="Saint Martin" Value="MF" />
          <Enumeration Text="Saint Pierre and Miquelon" Value="PM" />
          <Enumeration Text="Saint Vincent and the Grenadines" Value="VC" />
          <Enumeration Text="Samoa" Value="WS" />
          <Enumeration Text="San Marino" Value="SM" />
          <Enumeration Text="São Tomé and Príncipe" Value="ST" />
          <Enumeration Text="Saudi Arabia" Value="SA" />
          <Enumeration Text="Senegal" Value="SN" />
          <Enumeration Text="Serbia" Value="RS" />
          <Enumeration Text="Seychelles" Value="SC" />
          <Enumeration Text="Sierra Leone" Value="SL" />
          <Enumeration Text="Singapore" Value="SG" />
          <Enumeration Text="Sint Eustatius" Value="XE" />
          <Enumeration Text="Sint Maarten" Value="SX" />
          <Enumeration Text="Slovakia" Value="SK" />
          <Enumeration Text="Slovenia" Value="SI" />
          <Enumeration Text="Solomon Islands" Value="SB" />
          <Enumeration Text="Somalia" Value="SO" />
          <Enumeration Text="South Africa" Value="ZA" />
          <Enumeration Text="South Georgia and the South Sandwich Islands" Value="GS" />
          <Enumeration Text="South Sudan" Value="SS" />
          <Enumeration Text="Spain" Value="ES" />
          <Enumeration Text="Sri Lanka" Value="LK" />
          <Enumeration Text="St Helena, Ascension, Tristan da Cunha" Value="SH" />
          <Enumeration Text="Sudan" Value="SD" />
          <Enumeration Text="Suriname" Value="SR" />
          <Enumeration Text="Svalbard" Value="SJ" />
          <Enumeration Text="Swaziland" Value="SZ" />
          <Enumeration Text="Sweden" Value="SE" />
          <Enumeration Text="Switzerland" Value="CH" />
          <Enumeration Text="Syria" Value="SY" />
          <Enumeration Text="Taiwan" Value="TW" />
          <Enumeration Text="Tajikistan" Value="TJ" />
          <Enumeration Text="Tanzania" Value="TZ" />
          <Enumeration Text="Thailand" Value="TH" />
          <Enumeration Text="Timor-Leste" Value="TL" />
          <Enumeration Text="Togo" Value="TG" />
          <Enumeration Text="Tokelau" Value="TK" />
          <Enumeration Text="Tonga" Value="TO" />
          <Enumeration Text="Trinidad and Tobago" Value="TT" />
          <Enumeration Text="Tunisia" Value="TN" />
          <Enumeration Text="Turkey" Value="TR" />
          <Enumeration Text="Turkmenistan" Value="TM" />
          <Enumeration Text="Turks and Caicos Islands" Value="TC" />
          <Enumeration Text="Tuvalu" Value="TV" />
          <Enumeration Text="U.S. Outlying Islands" Value="UM" />
          <Enumeration Text="U.S. Virgin Islands" Value="VI" />
          <Enumeration Text="Uganda" Value="UG" />
          <Enumeration Text="Ukraine" Value="UA" />
          <Enumeration Text="United Arab Emirates" Value="AE" />
          <Enumeration Text="United Kingdom" Value="GB" />
          <Enumeration Text="United States" Value="US" />
          <Enumeration Text="Uruguay" Value="UY" />
          <Enumeration Text="Uzbekistan" Value="UZ" />
          <Enumeration Text="Vanuatu" Value="VU" />
          <Enumeration Text="Vatican City" Value="VA" />
          <Enumeration Text="Venezuela" Value="VE" />
          <Enumeration Text="Vietnam" Value="VN" />
          <Enumeration Text="Wallis and Futuna" Value="WF" />
          <Enumeration Text="Yemen" Value="YE" />
          <Enumeration Text="Zambia" Value="ZM" />
          <Enumeration Text="Zimbabwe" Value="ZW" />
        </Restriction>
      </ClaimType>

      <ClaimType Id="blockMinorUser">
        <DisplayName>blockMinorUser</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>True, if the user is considered a minor by the laws and regulations of the user's country of legal residence and should be blocked</UserHelpText>
      </ClaimType>

      <ClaimType Id="ageGatingValuesChanged">
        <DisplayName>ageGatingValuesChanged</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>True if re-evaluating ageGroup/consentProvidedForMinor gives different value then existing ageGroup/consentProvidedForMinor value.</UserHelpText>
      </ClaimType>

      <ClaimType Id="ignoreConsent">
        <DisplayName>ignoreConsent</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>True if parental consent provided for a minor should be ignored.</UserHelpText>
      </ClaimType>

      <ClaimType Id="dateOfBirth">
        <DisplayName>Date of Birth</DisplayName>
        <DataType>date</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" PartnerClaimType="extension_dateOfBirth" />
        </DefaultPartnerClaimTypes>
        <UserHelpText>Your date of birth.</UserHelpText>
        <UserInputType>DateTimeDropdown</UserInputType>
        <PredicateValidationReference Id="CustomDateRange" />
      </ClaimType>

      <ClaimType Id="isDoBPresent">
        <DisplayName>isDoBPresent</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>isLegalAgeGroupClassificationMinorWithoutConsent</UserHelpText>
      </ClaimType>

      <ClaimType Id="isLegalCountryPresent">
        <DisplayName>isLegalCountryPresent</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>True if legalCountry value is present in claimsBag</UserHelpText>
      </ClaimType>

      <ClaimType Id="skipProgressiveProfilePage">
        <DisplayName>skipProgressiveProfilePage</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>True if dateOfBirth and legalCountry are present in claimsBag so skip showing ProgressiveProfile page.</UserHelpText>
      </ClaimType>

      <ClaimType Id="consentProvidedForMinor">
        <DisplayName>ConsentProvidedForMinor</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>The consent provided for a minor user</UserHelpText>
      </ClaimType>

      <ClaimType Id="ageGroup">
        <DisplayName>AgeGroup</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>The ageGroup value evaluated from user's date of birth and country of legal residence</UserHelpText>
      </ClaimType>

      <ClaimType Id="ageGroup_current">
        <DisplayName>Re-Evaluated AgeGroup</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>The ageGroup value re-evaluated from user's date of birth and country of legal residence</UserHelpText>
      </ClaimType>

      <ClaimType Id="doRegulationsRequireParentalConsent">
        <DisplayName>Requires Parental Consent</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>True, if regulations require parental consent for minors</UserHelpText>
      </ClaimType>

      <ClaimType Id="consentProvidedForMinor_current">
        <DisplayName>Re-Evaluated ConsentProvidedForMinor</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>The consentProvidedForMinor value re-evaluated from user's date of birth and country of legal residence</UserHelpText>
      </ClaimType>

      <ClaimType Id="ageGroupValueChanged">
        <DisplayName>ageGroupValueChanged</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>True if re-evaluating ageGroup gives different value then existing ageGroup value.</UserHelpText>
      </ClaimType>

      <ClaimType Id="consentProvidedForMinorValueChanged">
        <DisplayName>consentProvidedForMinorValueChanged</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>True if re-evaluating consentProvidedForMinor gives different value then existing consentProvidedForMinor value.</UserHelpText>
      </ClaimType>

      <ClaimType Id="legalAgeGroupClassification">
        <DisplayName>Legal Age Group Classification</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>The legal age group that a user falls into based on their country and date of birth</UserHelpText>
      </ClaimType>

      <ClaimType Id="responseCode">
        <DisplayName>responsecode</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>A claim responsible for holding response codes to send to the relying party</UserHelpText>
      </ClaimType>

      <ClaimType Id="responseMsg">
        <DisplayName></DisplayName>
        <DataType>string</DataType>
        <UserHelpText>A claim responsible for holding response messages to send to the relying party</UserHelpText>
        <UserInputType>Paragraph</UserInputType>
        <Restriction>
          <Enumeration Text="B2C_V1_90001" Value="Unfortunately, your sign on has been blocked. Privacy and online safety laws in your country prevent access to accounts belonging to children." />
        </Restriction>
      </ClaimType>

      <ClaimType Id="response">
        <DisplayName>response</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>A claim responsible for holding response to send to the relying party</UserHelpText>
      </ClaimType>

      <ClaimType Id="islegalAgeGroupClassificationUndefined">
        <DisplayName>islegalAgeGroupClassificationUndefined</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>islegalAgeGroupClassificationUndefined</UserHelpText>
      </ClaimType>

      <ClaimType Id="isLegalAgeGroupClassificationMinorWithoutConsent">
        <DisplayName>isLegalAgeGroupClassificationMinorWithoutConsent</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>isLegalAgeGroupClassificationMinorWithoutConsent</UserHelpText>
      </ClaimType>

      <ClaimType Id="isMinorAndRequiresParentalConsent">
        <DisplayName>isMinorAndRequiresParentalConsent</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>True, if the user is considered a minor by the laws and regulations of the user's country of legal residence and should be blocked</UserHelpText>
      </ClaimType>

      <ClaimType Id="isMinorAndIgnoreConsent">
        <DisplayName>isMinorAndIgnoreConsent</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>True if a user is minor and consentProvidedForMinor is ignored.</UserHelpText>
      </ClaimType>

      <ClaimType Id="isMinor">
        <DisplayName>isMinor</DisplayName>
        <DataType>boolean</DataType>
        <UserHelpText>True, if the user is considered a minor by the laws and regulations of the user's country of legal residence</UserHelpText>
      </ClaimType>

      <ClaimType Id="executed-SelfAsserted-Input">
        <DisplayName>Executed-SelfAsserted-Input</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>A claim that specifies whether attributes were collected from the user.</UserHelpText>
      </ClaimType>

      <ClaimType Id="isSelfAssertedAgeGating">
        <DisplayName>isMinor</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <!-- TOTP Demo -->

      <!-- The app code user provided-->
      <ClaimType Id="strongAuthenticationAppCode">
        <DisplayName>Enter the verification code from your Authenticator App</DisplayName>
        <DataType>string</DataType>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>

      <!-- The QR code for app registrations-->
      <ClaimType Id="strongAuthenticationAppQRCodeBitmap">
        <DisplayName>Verified App QR Code Bitmap</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <!-- Stores the user secret Key in Azure Active Directory user account
      This secret is generated by the REST API-->
      <ClaimType Id="extension_StrongAuthenticationAppSecretKey">
        <DisplayName>Verified App Secret Key</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <!-- Stores the user last matched in Azure Active Directory user account.
      We use the attribute to prevent and verify the verification code has already been used.-->
      <ClaimType Id="extension_StrongAuthenticationAppTimeStepMatched">
        <DisplayName>Verified App Time Step Matched</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="mfaType">
        <DisplayName>MFA Type</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="issuerUserId">
        <DisplayName>Username</DisplayName>
        <DataType>string</DataType>
        <UserHelpText />
        <UserInputType>TextBox</UserInputType>
        <Restriction>
          <Pattern RegularExpression="^[a-zA-Z0-9]+[a-zA-Z0-9_-]*$" HelpText="The username you provided is not valid. It must begin with an alphabet or number and can contain alphabets, numbers and the following symbols: _ -" />
        </Restriction>
      </ClaimType>

      <ClaimType Id="alternativeSecurityIds">
        <DisplayName>alternativeSecurityIds</DisplayName>
        <DataType>alternativeSecurityIdCollection</DataType>
        <AdminHelpText>alternativeSecurityIds</AdminHelpText>
        <UserHelpText>alternativeSecurityIds</UserHelpText>
      </ClaimType>

      <ClaimType Id="identityProviderToUnlink">
        <DisplayName>Identity Providers</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="identityProviders">
        <DisplayName>Identity Providers</DisplayName>
        <DataType>stringCollection</DataType>
      </ClaimType>

      <ClaimType Id="LinkedSocial">
        <DisplayName>linkedsocial</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="appLogo">
        <DisplayName>Application Logo</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="appBackground">
        <DisplayName>Application Background</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="Otp">
        <DisplayName>Secondary One-time password</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="VerificationCode">
        <DisplayName>E-mail Verification Code</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Enter your email verification code</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>

      <ClaimType Id="Url">
        <DisplayName>Links</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="sendGridReqBody">
        <DisplayName>SendGrid request body</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="email-heading">
        <DisplayName>Email heading</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="email-emailintro">
        <DisplayName>Email element</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="email-otpintro">
        <DisplayName>Email element</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="email-sincerely">
        <DisplayName>Email element</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="email-industry">
        <DisplayName>Email element</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="email-subject">
        <DisplayName>Email element</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

    </ClaimsSchema>

    <Predicates>

      <Predicate Id="DateRange" Method="IsDateRange" HelpText="The date must be between 01-01-1905 and today.">
        <Parameters>
          <Parameter Id="Minimum">1905-01-01</Parameter>
          <Parameter Id="Maximum">Today</Parameter>
        </Parameters>
      </Predicate>

    </Predicates>

    <PredicateValidations>

      <PredicateValidation Id="CustomDateRange">
        <PredicateGroups>
          <PredicateGroup Id="DateRangeGroup">
            <PredicateReferences>
              <PredicateReference Id="DateRange" />
            </PredicateReferences>
          </PredicateGroup>
        </PredicateGroups>
      </PredicateValidation>

    </PredicateValidations>

    <ClaimsTransformations>

      <ClaimsTransformation Id="AssertRefreshTokenIssuedOnDateTimeIsLaterThanRefreshTokensValidFromDateTime" TransformationMethod="AssertDateTimeIsGreaterThan">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="refreshTokenIssuedOnDateTime" TransformationClaimType="leftOperand" />
          <InputClaim ClaimTypeReferenceId="refreshTokensValidFromDateTime" TransformationClaimType="rightOperand" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="AssertIfEqualTo" DataType="boolean" Value="false" />
          <InputParameter Id="AssertIfRightOperandIsNotPresent" DataType="boolean" Value="true" />
        </InputParameters>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateAlternativeSecurityId" TransformationMethod="CreateAlternativeSecurityId">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="userId" TransformationClaimType="key" />
          <InputClaim ClaimTypeReferenceId="identityProvider" TransformationClaimType="identityProvider" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="alternativeSecurityId" TransformationClaimType="alternativeSecurityId" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateExternalUserName" TransformationMethod="CreateRandomString">
        <InputParameters>
          <InputParameter Id="randomGeneratorType" DataType="string" Value="GUID" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="userName" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateExternalUserPrincipalName" TransformationMethod="FormatStringClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="userName" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringFormat" DataType="string" Value="{0}@{RelyingPartyTenantId}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="userPrincipalName" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateMicrosoftWorkIdentityProvider" TransformationMethod="FormatStringClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="tenantId" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringFormat" DataType="string" Value="https://sts.windows.net/{0}/" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="identityProvider" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateOtherMailsFromEmail" TransformationMethod="AddItemToStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="item" />
          <InputClaim ClaimTypeReferenceId="otherMails" TransformationClaimType="collection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="otherMails" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="GetTermsOfServiceConsentDateTime" TransformationMethod="GetCurrentDateTime">
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="extension_TermsOfServiceConsentDateTime" TransformationClaimType="currentDateTime" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="IsTermsOfServiceConsentRequired" TransformationMethod="IsTermsOfUseConsentRequired">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="extension_TermsOfServiceConsentDateTime" TransformationClaimType="termsOfUseConsentDateTime" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="termsOfUseTextUpdateDateTime" DataType="dateTime" Value="2018-04-01T00:00:00" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="termsOfServiceConsentRequired" TransformationClaimType="result" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateUserIdForMFA" TransformationMethod="FormatStringClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="objectId" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringFormat" DataType="string" Value="{0}@{RelyingPartyTenantId}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="userIdForMFA" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateRandomUserIdForMFA" TransformationMethod="FormatStringClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="extension_PhoneNumber" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringFormat" DataType="string" Value="{0}@{RelyingPartyTenantId}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="userIdForMFA" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateFromMailAddress" TransformationMethod="CreateStringClaim">
        <InputParameters>
          <InputParameter Id="value" DataType="string" Value="no-reply@woodgrovegroceries.net" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="fromMailAddress" TransformationClaimType="createdClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateAccountIdFromInvitationAccountId" TransformationMethod="FormatStringClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="invitedAccountId" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringFormat" DataType="string" Value="{0}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="extension_AccountNumber" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateSignInNameFromInvitationEmail" TransformationMethod="FormatStringClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="invitedEmail" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringFormat" DataType="string" Value="{0}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="signInName" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="GetForgotUsernamMessage" TransformationMethod="CreateStringClaim">
        <InputParameters>
          <InputParameter Id="value" DataType="string" Value="Your username has been sent to your email. To continue, open your mailbox, copy the username and login again." />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="userMessage" TransformationClaimType="createdClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="IsDateOfBirthPresent" TransformationMethod="DoesClaimExist">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="dateOfBirth" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isDoBPresent" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="IsLegalCountryPresent" TransformationMethod="DoesClaimExist">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="legalCountry" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isLegalCountryPresent" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="EvaluateSkipProgressiveProfilePage" TransformationMethod="AndClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="isDoBPresent" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="isLegalCountryPresent" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="skipProgressiveProfilePage" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="ReEvaluateAgeGroupAndConsent" TransformationMethod="GetAgeGroupConsentProvidedAndRequiresConsent">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="dateOfBirth" TransformationClaimType="dateOfBirth" />
          <InputClaim ClaimTypeReferenceId="legalCountry" TransformationClaimType="countryCode" />
          <InputClaim ClaimTypeReferenceId="consentProvidedForMinor" TransformationClaimType="consentProvidedForMinor" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="ageGroup_current" TransformationClaimType="ageGroup" />
          <OutputClaim ClaimTypeReferenceId="doRegulationsRequireParentalConsent" TransformationClaimType="requiresParentalConsent" />
          <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor_current" TransformationClaimType="consentProvidedForMinor" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="UpdateAgeGroup" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="ageGroup_current" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="ageGroup" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="HasConsentProvidedForMinorValueChanged" TransformationMethod="CompareClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="consentProvidedForMinor" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="consentProvidedForMinor_current" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="operator" DataType="string" Value="NOT EQUAL" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="consentProvidedForMinorValueChanged" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="UpdateConsentProvidedForMinor" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="consentProvidedForMinor_current" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="EvaluateAgeGatingValuesChanged" TransformationMethod="OrClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="ageGroupValueChanged" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="consentProvidedForMinorValueChanged" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="ageGatingValuesChanged" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="SetIsLegalAgeGroupClassificationUndefined" TransformationMethod="SetClaimsIfStringsMatch">
        <InputClaims>
          <!-- legalAgeGroupClassification is readonly claim  and gets set only by AAD based on ageGroup value. 
        So we are writing ageGroup value in AADWrite call. This internally sets legalAgeGroupClassification -->
          <InputClaim ClaimTypeReferenceId="legalAgeGroupClassification" TransformationClaimType="claimToMatch" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="matchTo" DataType="string" Value="undefined" />
          <InputParameter Id="stringComparison" DataType="string" Value="ordinalIgnoreCase" />
          <InputParameter Id="outputClaimIfMatched" DataType="string" Value="B2C_V1_90001" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="responseCode" TransformationClaimType="outputClaim" />
          <OutputClaim ClaimTypeReferenceId="islegalAgeGroupClassificationUndefined" TransformationClaimType="stringCompareResultClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="SetIsLegalAgeGroupClassificationMinorWithoutConsent" TransformationMethod="SetClaimsIfStringsMatch">
        <InputClaims>
          <!-- legalAgeGroupClassification is readonly claim  and gets set only by AAD based on ageGroup value. 
        So we are writing ageGroup value in AADWrite call. This internally sets legalAgeGroupClassification -->
          <InputClaim ClaimTypeReferenceId="legalAgeGroupClassification" TransformationClaimType="claimToMatch" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="matchTo" DataType="string" Value="minorWithoutParentalConsent" />
          <InputParameter Id="stringComparison" DataType="string" Value="ordinalIgnoreCase" />
          <InputParameter Id="outputClaimIfMatched" DataType="string" Value="B2C_V1_90001" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="responseCode" TransformationClaimType="outputClaim" />
          <OutputClaim ClaimTypeReferenceId="isLegalAgeGroupClassificationMinorWithoutConsent" TransformationClaimType="stringCompareResultClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CalculateIsUserMinorAndRequireParentalConsent" TransformationMethod="OrClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="islegalAgeGroupClassificationUndefined" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="isLegalAgeGroupClassificationMinorWithoutConsent" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isMinorAndRequiresParentalConsent" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="HasAgeGroupValueChanged" TransformationMethod="CompareClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="ageGroup" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="ageGroup_current" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="operator" DataType="string" Value="NOT EQUAL" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="ageGroupValueChanged" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CalculateAgeGroupAndConsent" TransformationMethod="GetAgeGroupConsentProvidedAndRequiresConsent">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="dateOfBirth" TransformationClaimType="dateOfBirth" />
          <InputClaim ClaimTypeReferenceId="legalCountry" TransformationClaimType="countryCode" />
          <InputClaim ClaimTypeReferenceId="consentProvidedForMinor" TransformationClaimType="consentProvidedForMinor" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="ageGroup" TransformationClaimType="ageGroup" />
          <OutputClaim ClaimTypeReferenceId="doRegulationsRequireParentalConsent" TransformationClaimType="requiresParentalConsent" />
          <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor" TransformationClaimType="consentProvidedForMinor" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="SetIsMinor" TransformationMethod="SetClaimsIfStringsMatch">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="ageGroup" TransformationClaimType="claimToMatch" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="matchTo" DataType="string" Value="Minor" />
          <InputParameter Id="stringComparison" DataType="string" Value="ordinalIgnoreCase" />
          <InputParameter Id="outputClaimIfMatched" DataType="string" Value="B2C_V1_90001" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="responseCode" TransformationClaimType="outputClaim" />
          <OutputClaim ClaimTypeReferenceId="isMinor" TransformationClaimType="stringCompareResultClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="IsUserMinorAndRequireParentalConsent" TransformationMethod="AndClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="isMinor" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="doRegulationsRequireParentalConsent" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isMinorAndRequiresParentalConsent" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="SetIsUserMinorAndIgnoreConsent" TransformationMethod="AndClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="isMinor" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="ignoreConsent" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isMinorAndIgnoreConsent" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="SetIsMinorShouldBeBlocked" TransformationMethod="OrClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="isMinorAndRequiresParentalConsent" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="isMinorAndIgnoreConsent" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="blockMinorUser" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="GetResponseMsgMappedToResponseCode" TransformationMethod="GetMappedValueFromLocalizedCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="responseCode" TransformationClaimType="mapFromClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="responseMsg" TransformationClaimType="restrictionValueClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="MergeResponseMsgAndCode" TransformationMethod="FormatStringMultipleClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="responseCode" TransformationClaimType="inputClaim1"/>
          <InputClaim ClaimTypeReferenceId="responseMsg" TransformationClaimType="inputClaim2"/>
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringFormat" DataType="string" Value="{0}%3A {1}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="response" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="AssertBlockMinorUserIsFalse" TransformationMethod="AssertBooleanClaimIsEqualToValue">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="blockMinorUser" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="valueToCompareTo" DataType="boolean" Value="false" />
        </InputParameters>
      </ClaimsTransformation>

      <ClaimsTransformation Id="SetAuthenticationSourceToNull" TransformationMethod="NullClaim">
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="authenticationSource" TransformationClaimType="claim_to_null" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="ExtractIdentityProviders" TransformationMethod="GetIdentityProvidersFromAlternativeSecurityIdCollectionTransformation">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="alternativeSecurityIds" TransformationClaimType="alternativeSecurityIdCollection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="identityProviders" TransformationClaimType="identityProvidersCollection" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="AppendIdtoAlternativeSecurityIds" TransformationMethod="AddItemToAlternativeSecurityIdCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="alternativeSecurityId" TransformationClaimType="item" />
          <InputClaim ClaimTypeReferenceId="alternativeSecurityIds" TransformationClaimType="collection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="alternativeSecurityIds" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="RemoveIdFromAlternativeSecurityIds" TransformationMethod="RemoveAlternativeSecurityIdByIdentityProvider">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="identityProviderToUnlink" TransformationClaimType="identityProvider" />
          <InputClaim ClaimTypeReferenceId="alternativeSecurityIds" TransformationClaimType="collection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="alternativeSecurityIds" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="GenerateSendGridRequestBody-Otp" TransformationMethod="GenerateJson">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="personalizations.0.to.0.email" />
          <InputClaim ClaimTypeReferenceId="otp" TransformationClaimType="personalizations.0.dynamic_template_data.otp" />
          <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="personalizations.0.dynamic_template_data.email" />
          <InputClaim ClaimTypeReferenceId="email-heading" TransformationClaimType="personalizations.0.dynamic_template_data.heading" />
          <InputClaim ClaimTypeReferenceId="email-emailintro" TransformationClaimType="personalizations.0.dynamic_template_data.emailintro" />
          <InputClaim ClaimTypeReferenceId="email-otpintro" TransformationClaimType="personalizations.0.dynamic_template_data.otpintro" />
          <InputClaim ClaimTypeReferenceId="email-sincerely" TransformationClaimType="personalizations.0.dynamic_template_data.sincerely" />
          <InputClaim ClaimTypeReferenceId="email-industry" TransformationClaimType="personalizations.0.dynamic_template_data.industry" />
          <InputClaim ClaimTypeReferenceId="email-subject" TransformationClaimType="personalizations.0.dynamic_template_data.subject" />
        </InputClaims>
        <InputParameters>
          <!-- Update the template_id value with the ID of your SendGrid template. -->
          <InputParameter Id="template_id" DataType="string" Value="sendgrid-templateid-otp"/>
          <InputParameter Id="from.email" DataType="string" Value="reply@address-here"/>
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="sendGridReqBody" TransformationClaimType="outputClaim"/>
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="GenerateSendGridRequestBody-Invite" TransformationMethod="GenerateJson">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="extension_UserEmailToInvite" TransformationClaimType="personalizations.0.to.0.email" />
          <InputClaim ClaimTypeReferenceId="otp" TransformationClaimType="personalizations.0.dynamic_template_data.otp" />
          <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="personalizations.0.dynamic_template_data.email" />
          <InputClaim ClaimTypeReferenceId="Url" TransformationClaimType="personalizations.0.dynamic_template_data.url" />
          <InputClaim ClaimTypeReferenceId="displayName" TransformationClaimType="personalizations.0.dynamic_template_data.displayName" />
          <InputClaim ClaimTypeReferenceId="email-heading" TransformationClaimType="personalizations.0.dynamic_template_data.heading" />
          <InputClaim ClaimTypeReferenceId="email-emailintro" TransformationClaimType="personalizations.0.dynamic_template_data.emailintro" />
          <InputClaim ClaimTypeReferenceId="email-otpintro" TransformationClaimType="personalizations.0.dynamic_template_data.accept" />
          <InputClaim ClaimTypeReferenceId="email-sincerely" TransformationClaimType="personalizations.0.dynamic_template_data.sincerely" />
          <InputClaim ClaimTypeReferenceId="email-industry" TransformationClaimType="personalizations.0.dynamic_template_data.industry" />
          <InputClaim ClaimTypeReferenceId="email-subject" TransformationClaimType="personalizations.0.dynamic_template_data.subject" />
        </InputClaims>
        <InputParameters>
          <!-- Update the template_id value with the ID of your SendGrid template. -->
          <InputParameter Id="template_id" DataType="string" Value="sendgrid-templateid-invitation"/>
          <InputParameter Id="from.email" DataType="string" Value="reply@address-here"/>
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="sendGridReqBody" TransformationClaimType="outputClaim"/>
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="LocalizedStringAssignment-Otp" TransformationMethod="GetLocalizedStringsTransformation">
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="email-heading" TransformationClaimType="email_otp_heading" />
          <OutputClaim ClaimTypeReferenceId="email-emailintro" TransformationClaimType="email_otp_emailintro" />
          <OutputClaim ClaimTypeReferenceId="email-otpintro" TransformationClaimType="email_otp_otpintro" />
          <OutputClaim ClaimTypeReferenceId="email-sincerely" TransformationClaimType="email_otp_sincerely" />
          <OutputClaim ClaimTypeReferenceId="email-industry" TransformationClaimType="email_otp_industry" />
          <OutputClaim ClaimTypeReferenceId="email-subject" TransformationClaimType="email_otp_subject" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="LocalizedStringAssignment-Invite" TransformationMethod="GetLocalizedStringsTransformation">
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="email-heading" TransformationClaimType="email_invite_heading" />
          <OutputClaim ClaimTypeReferenceId="email-emailintro" TransformationClaimType="email_invite_emailintro" />
          <OutputClaim ClaimTypeReferenceId="email-otpintro" TransformationClaimType="email_invite_accept" />
          <OutputClaim ClaimTypeReferenceId="email-sincerely" TransformationClaimType="email_invite_sincerely" />
          <OutputClaim ClaimTypeReferenceId="email-industry" TransformationClaimType="email_invite_industry" />
          <OutputClaim ClaimTypeReferenceId="email-subject" TransformationClaimType="email_invite_subject" />
        </OutputClaims>
      </ClaimsTransformation>

    </ClaimsTransformations>

    <ClientDefinitions>
      <ClientDefinition Id="DefaultWeb">
        <ClientUIFilterFlags>LineMarkers, MetaRefresh</ClientUIFilterFlags>
      </ClientDefinition>
    </ClientDefinitions>

    <ContentDefinitions>

      <ContentDefinition Id="api.account.profile">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Account Profile</Item>
        </Metadata>
      </ContentDefinition>

      <ContentDefinition Id="api.account.termsofservice">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Account Terms of Service</Item>
        </Metadata>
      </ContentDefinition>

      <ContentDefinition Id="api.enterpriseaccount.registration">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Work Account Registration</Item>
        </Metadata>
      </ContentDefinition>

      <ContentDefinition Id="api.error">
        <LoadUri>~/tenant/default/exception.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:globalexception:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Error</Item>
        </Metadata>
      </ContentDefinition>

      <ContentDefinition Id="api.idpselection">
        <LoadUri>~/tenant/default/idpselector.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:idpselection:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Account Selection</Item>
        </Metadata>
      </ContentDefinition>

      <ContentDefinition Id="api.localaccount.login">
        <LoadUri>~/tenant/default/selfasserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Local Account Login</Item>
        </Metadata>
      </ContentDefinition>

      <ContentDefinition Id="api.localaccount.password">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Local Account Password</Item>
        </Metadata>
      </ContentDefinition>

      <ContentDefinition Id="api.localaccount.registration">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Local Account Registration</Item>
        </Metadata>
      </ContentDefinition>

      <ContentDefinition Id="api.socialaccount.registration">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Personal Account Registration</Item>
        </Metadata>
      </ContentDefinition>

      <ContentDefinition Id="api.unified">
        <LoadUri>~/tenant/default/unified.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:unifiedssp:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Account Login or Registration</Item>
        </Metadata>
      </ContentDefinition>

    </ContentDefinitions>

    <DisplayControls>

      <DisplayControl Id="emailVerificationControl" UserInterfaceControlType="VerificationControl">
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="email" Required="true" />
          <DisplayClaim ClaimTypeReferenceId="verificationCode" ControlClaimType="VerificationCode" Required="true" />
        </DisplayClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="email" />
        </OutputClaims>
        <Actions>
          <Action Id="SendCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="GenerateOtp" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="RestApi-SendEmailCodeToUser"/>
            </ValidationClaimsExchange>
          </Action>
          <Action Id="VerifyCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="VerifyOtp" />
            </ValidationClaimsExchange>
          </Action>
        </Actions>
      </DisplayControl>

      <DisplayControl Id="emailVerificationSendGrid" UserInterfaceControlType="VerificationControl">
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="email" Required="true" />
          <DisplayClaim ClaimTypeReferenceId="verificationCode" ControlClaimType="VerificationCode" Required="true" />
        </DisplayClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="email" />
        </OutputClaims>
        <Actions>
          <Action Id="SendCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="GenerateOtp" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="SendGrid-Otp" />
            </ValidationClaimsExchange>
          </Action>
          <Action Id="VerifyCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="VerifyOtp" />
            </ValidationClaimsExchange>
          </Action>
        </Actions>
      </DisplayControl>

    </DisplayControls>

  </BuildingBlocks>

  <ClaimsProviders>

    <ClaimsProvider>
      <DisplayName>Azure Active Directory Store</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="AzureActiveDirectoryStore-Common">
          <DisplayName>Azure Active Directory Store</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <IncludeInSso>false</IncludeInSso>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="ExtractProviders">
          <DisplayName>ExtractProviders</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="alternativeSecurityIds" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="ExtractIdentityProviders" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserUpdateWithAlternativeSecurityIds">
          <Metadata>
            <!-- <Item Key="api-version">1.6</Item> -->
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="alternativeSecurityIds" />
            <PersistedClaim ClaimTypeReferenceId="extension_SocialAccountLinked" DefaultValue="true" />
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="alternativeSecurityIds" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserWritePhoneNumberUsingObjectId">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" PartnerClaimType="extension_PhoneNumber" />
            <PersistedClaim ClaimTypeReferenceId="extension_IsPhoneNumberVerified" DefaultValue="true"/>
            <PersistedClaim ClaimTypeReferenceId="mfaType" PartnerClaimType="extension_MfaType" DefaultValue="sms" />
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteUserAllergicConsentByObjectId-ThrowIfNotExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="consentToShareAllergyInfo" PartnerClaimType="extension_UserConsentToShareAllergyInfo"/>
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteUserAllergicInfoByObjectId-ThrowIfNotExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="extension_IsAllergensAdded" DefaultValue="true"/>
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteUserAllergicInfoByObjectId-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteUserAllergicInfoByObjectId-Common">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="extension_Allergens" DefaultValue=""/>
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteAgeGatingDetailsByObjectId-ThrowIfNotExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <!-- AgeGating related claims -->
            <PersistedClaim ClaimTypeReferenceId="dateOfBirth" />
            <PersistedClaim ClaimTypeReferenceId="legalCountry" />
            <PersistedClaim ClaimTypeReferenceId="ageGroup" />
            <PersistedClaim ClaimTypeReferenceId="consentProvidedForMinor" />
          </PersistedClaims>
          <OutputClaims>
            <!-- AgeGating related claims -->
            <OutputClaim ClaimTypeReferenceId="legalAgeGroupClassification" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteInvitationDetailsByObjectId-ThrowIfNotExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="extension_GroupName" DefaultValue=" "/>
            <PersistedClaim ClaimTypeReferenceId="extension_UserEmailToInvite" DefaultValue=" "/>
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteUserProfileAndUserAllergicInfoByObjectId-ThrowIfNotExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />

            <PersistedClaim ClaimTypeReferenceId="displayName" />
            <PersistedClaim ClaimTypeReferenceId="jobTitle" />
            <PersistedClaim ClaimTypeReferenceId="extension_OrganizationDisplayName" />

            <PersistedClaim ClaimTypeReferenceId="extension_Allergens" DefaultValue=""/>
            <PersistedClaim ClaimTypeReferenceId="extension_IsAllergensAdded" DefaultValue="true" />
            <PersistedClaim ClaimTypeReferenceId="consentToShareAllergyInfo" PartnerClaimType="extension_UserConsentToShareAllergyInfo"/>
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteUserAlternativeAccountByObjectId-ThrowIfNotExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateOtherMailsFromEmail" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="alternativeSecurityId" />

            <PersistedClaim ClaimTypeReferenceId="extension_SocialAccountLinked" DefaultValue="true" />
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="otherMails" />
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteLocalUserByInvitationEmail-ThrowIfExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item>
            <Item Key="UserMessageIfClaimsPrincipalAlreadyExists">You are already registered. Select the back button and sign in.</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateOtherMailsFromEmail" />
            <InputClaimsTransformation ReferenceId="GetTermsOfServiceConsentDateTime" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="displayName" />
            <PersistedClaim ClaimTypeReferenceId="invitedEmail" PartnerClaimType="signInNames.emailAddress" />
            <PersistedClaim ClaimTypeReferenceId="newPassword" PartnerClaimType="password" />
            <PersistedClaim ClaimTypeReferenceId="otherMails" />
            <PersistedClaim ClaimTypeReferenceId="passwordPolicies" DefaultValue="DisablePasswordExpiration" />
            <PersistedClaim ClaimTypeReferenceId="extension_TermsOfServiceConsentDateTime" />
            <PersistedClaim ClaimTypeReferenceId="invitedAccountId" PartnerClaimType="extension_AccountNumber"/>
            <PersistedClaim ClaimTypeReferenceId="invitedGroupId" PartnerClaimType="extension_GroupName"/>
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="newUser" PartnerClaimType="newClaimsPrincipalCreated" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteLocalUserByUsername-ThrowIfExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item>
            <Item Key="UserMessageIfClaimsPrincipalAlreadyExists">You are already registered. Select the back button and sign in.</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateOtherMailsFromEmail" />
            <InputClaimsTransformation ReferenceId="GetTermsOfServiceConsentDateTime" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="signInName" PartnerClaimType="signInNames.userName" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="displayName" />
            <PersistedClaim ClaimTypeReferenceId="signInName" PartnerClaimType="signInNames.userName" />
            <PersistedClaim ClaimTypeReferenceId="newPassword" PartnerClaimType="password" />
            <PersistedClaim ClaimTypeReferenceId="extension_AccountNumber" />
            <PersistedClaim ClaimTypeReferenceId="otherMails" />
            <PersistedClaim ClaimTypeReferenceId="passwordPolicies" DefaultValue="DisablePasswordExpiration" />

            <!-- AgeGating related claims -->
            <PersistedClaim ClaimTypeReferenceId="dateOfBirth" />
            <PersistedClaim ClaimTypeReferenceId="legalCountry" />
            <PersistedClaim ClaimTypeReferenceId="ageGroup" />
            <PersistedClaim ClaimTypeReferenceId="consentProvidedForMinor" />

            <PersistedClaim ClaimTypeReferenceId="extension_TermsOfServiceConsentDateTime" />
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="newUser" PartnerClaimType="newClaimsPrincipalCreated" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteLocalUserByPhone-ThrowIfExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item>
            <Item Key="UserMessageIfClaimsPrincipalAlreadyExists">You are already registered. Select the back button and sign in.</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateOtherMailsFromEmail" />
            <InputClaimsTransformation ReferenceId="GetTermsOfServiceConsentDateTime" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="extension_PhoneNumber" PartnerClaimType="signInNames.phoneNumber" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="displayName" />
            <PersistedClaim ClaimTypeReferenceId="extension_PhoneNumber" PartnerClaimType="signInNames.phoneNumber" />
            <PersistedClaim ClaimTypeReferenceId="newPassword" PartnerClaimType="password" />
            <PersistedClaim ClaimTypeReferenceId="extension_AccountNumber" />
            <PersistedClaim ClaimTypeReferenceId="otherMails" />
            <PersistedClaim ClaimTypeReferenceId="passwordPolicies" DefaultValue="DisablePasswordExpiration" />
            <PersistedClaim ClaimTypeReferenceId="extension_TermsOfServiceConsentDateTime" />
            <PersistedClaim ClaimTypeReferenceId="extension_PhoneNumber" PartnerClaimType="extension_PhoneNumber" />
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="newUser" PartnerClaimType="newClaimsPrincipalCreated" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-UserReadUsingPhoneNumber-ThrowIfNotExists">
          <Metadata>
            <Item Key="Operation">Read</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="extension_PhoneNumber" PartnerClaimType="signInNames.phoneNumber" Required="true" />
          </InputClaims>
          <OutputClaims>
            <!-- Required claims -->
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication"/>
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-ReadUserByInvitationEmail">
          <Metadata>
            <Item Key="Operation">Read</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">false</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="invitedEmail" PartnerClaimType="signInNames.emailAddress" Required="true" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteSocialUserByAlternativeSecurityId-WithAgeGating-ThrowIfExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item>
            <Item Key="UserMessageIfClaimsPrincipalAlreadyExists">You are already registered. Select the back button and sign in.</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateOtherMailsFromEmail" />
            <InputClaimsTransformation ReferenceId="GetTermsOfServiceConsentDateTime" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="alternativeSecurityId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="alternativeSecurityId" />
            <PersistedClaim ClaimTypeReferenceId="displayName" />
            <PersistedClaim ClaimTypeReferenceId="mailNickname" DefaultValue="Unknown" />
            <PersistedClaim ClaimTypeReferenceId="otherMails" />
            <PersistedClaim ClaimTypeReferenceId="userPrincipalName" />
            <PersistedClaim ClaimTypeReferenceId="extension_TermsOfServiceConsentDateTime" />
            <PersistedClaim ClaimTypeReferenceId="extension_AccountNumber" />

            <!-- AgeGating related claims -->
            <PersistedClaim ClaimTypeReferenceId="dateOfBirth" />
            <PersistedClaim ClaimTypeReferenceId="legalCountry" />
            <PersistedClaim ClaimTypeReferenceId="ageGroup" />
            <PersistedClaim ClaimTypeReferenceId="consentProvidedForMinor" />

          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="newUser" PartnerClaimType="newClaimsPrincipalCreated" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserWriteUsingObjectId">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <!-- AgeGating related claims -->
            <PersistedClaim ClaimTypeReferenceId="dateOfBirth" />
            <PersistedClaim ClaimTypeReferenceId="legalCountry" />
            <PersistedClaim ClaimTypeReferenceId="ageGroup" />
            <PersistedClaim ClaimTypeReferenceId="consentProvidedForMinor" />
          </PersistedClaims>
          <OutputClaims>
            <!-- AgeGating related claims -->
            <OutputClaim ClaimTypeReferenceId="legalAgeGroupClassification" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-DeleteUserUsingObjectId">
          <Metadata>
            <Item Key="Operation">DeleteClaimsPrincipal</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <OutputClaims/>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <!-- Demo: The following technical profile updates the verification app for a user, identified by the object identifier for the user,
             in the Azure Active Directory identity store. An error is raised if the user does not exist. -->
        <TechnicalProfile Id="AAD-WriteUserAppCodeByObjectId">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="mfaType" PartnerClaimType="extension_MfaType" DefaultValue="totp" />
            <PersistedClaim ClaimTypeReferenceId="extension_StrongAuthenticationAppSecretKey" />
            <PersistedClaim ClaimTypeReferenceId="extension_StrongAuthenticationAppTimeStepMatched" />
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-ReadUserByAlternativeSecurityId">
          <Metadata>
            <Item Key="Operation">Read</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">false</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="alternativeSecurityId" Required="true" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-ReadUserByAlternativeSecurityId-ContinueIfNotExists">
          <Metadata>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">false</Item>
          </Metadata>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-ReadUserByAlternativeSecurityId" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-ReadUserByAlternativeSecurityId-ThrowIfNotExists">
          <Metadata>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-ReadUserByAlternativeSecurityId" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-ReadUserByEmail-ThrowIfNotExists">
          <Metadata>
            <Item Key="Operation">Read</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
            <Item Key="UserMessageIfClaimsPrincipalDoesNotExist">An account could not be found for the provided user ID.</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" Required="true" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-ReadUserByObjectId-ThrowIfNotExists">
          <Metadata>
            <Item Key="Operation">Read</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
            <Item Key="UserMessageIfClaimsPrincipalDoesNotExist">User does not exist. You must sign up before you can sign in.</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="jobTitle" />
            <OutputClaim ClaimTypeReferenceId="otherMails" />
            <OutputClaim ClaimTypeReferenceId="extension_BusinessCustomerRole" />
            <OutputClaim ClaimTypeReferenceId="extension_CustomerType" />
            <OutputClaim ClaimTypeReferenceId="extension_OrganizationDisplayName" />
            <OutputClaim ClaimTypeReferenceId="extension_TermsOfServiceConsentDateTime" />

            <OutputClaim ClaimTypeReferenceId="extension_PhoneNumber" />
            <OutputClaim ClaimTypeReferenceId="extension_IsPhoneNumberVerified" />
            <OutputClaim ClaimTypeReferenceId="extension_Allergens" />
            <OutputClaim ClaimTypeReferenceId="extension_IsAllergensAdded" />
            <OutputClaim ClaimTypeReferenceId="consentToShareAllergyInfo" PartnerClaimType="extension_UserConsentToShareAllergyInfo"/>
            <OutputClaim ClaimTypeReferenceId="extension_SocialAccountLinked" />
            <OutputClaim ClaimTypeReferenceId="extension_AccountNumber" />
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="extension_GroupName" />

            <!-- AgeGating related claims -->
            <OutputClaim ClaimTypeReferenceId="dateOfBirth" />
            <OutputClaim ClaimTypeReferenceId="legalCountry" />
            <OutputClaim ClaimTypeReferenceId="ageGroup" />
            <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor" />
            <OutputClaim ClaimTypeReferenceId="legalAgeGroupClassification" />

            <!--TOTP Claims-->
            <OutputClaim ClaimTypeReferenceId="extension_StrongAuthenticationAppSecretKey" />
            <OutputClaim ClaimTypeReferenceId="extension_StrongAuthenticationAppTimeStepMatched" />
            <OutputClaim ClaimTypeReferenceId="mfaType" PartnerClaimType="extension_MfaType" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="IsTermsOfServiceConsentRequired" />
          </OutputClaimsTransformations>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-ReadUserByObjectId-ThrowIfNotExists-AssertIfRefreshTokenNotValid">
          <Metadata>
            <Item Key="Operation">Read</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="jobTitle" />
            <OutputClaim ClaimTypeReferenceId="otherMails" />
            <OutputClaim ClaimTypeReferenceId="extension_BusinessCustomerRole" />
            <OutputClaim ClaimTypeReferenceId="extension_CustomerType" />
            <OutputClaim ClaimTypeReferenceId="extension_OrganizationDisplayName" />
            <OutputClaim ClaimTypeReferenceId="extension_TermsOfServiceConsentDateTime" />
            <OutputClaim ClaimTypeReferenceId="refreshTokensValidFromDateTime" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="AssertRefreshTokenIssuedOnDateTimeIsLaterThanRefreshTokensValidFromDateTime" />
          </OutputClaimsTransformations>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>
        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteEnterpriseUserByAlternativeSecurityId-ThrowIfExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item>
            <Item Key="UserMessageIfClaimsPrincipalAlreadyExists">You are already registered. Select the back button and sign in.</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="GetTermsOfServiceConsentDateTime" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="alternativeSecurityId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="alternativeSecurityId" />
            <PersistedClaim ClaimTypeReferenceId="displayName" />
            <PersistedClaim ClaimTypeReferenceId="jobTitle" />
            <PersistedClaim ClaimTypeReferenceId="mailNickname" DefaultValue="Unknown" />
            <PersistedClaim ClaimTypeReferenceId="userPrincipalName" />
            <PersistedClaim ClaimTypeReferenceId="extension_BusinessCustomerRole" DefaultValue="Stocker" />
            <PersistedClaim ClaimTypeReferenceId="extension_CustomerType" DefaultValue="Work" />
            <PersistedClaim ClaimTypeReferenceId="extension_OrganizationDisplayName" />
            <PersistedClaim ClaimTypeReferenceId="extension_TermsOfServiceConsentDateTime" />
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="newUser" PartnerClaimType="newClaimsPrincipalCreated" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="extension_BusinessCustomerRole" />
            <OutputClaim ClaimTypeReferenceId="extension_CustomerType" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteLocalUserByEmail-ThrowIfExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item>
            <Item Key="UserMessageIfClaimsPrincipalAlreadyExists">You are already registered. Select the back button and sign in.</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateOtherMailsFromEmail" />
            <InputClaimsTransformation ReferenceId="GetTermsOfServiceConsentDateTime" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="displayName" />
            <PersistedClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" />
            <PersistedClaim ClaimTypeReferenceId="newPassword" PartnerClaimType="password" />
            <PersistedClaim ClaimTypeReferenceId="otherMails" />
            <PersistedClaim ClaimTypeReferenceId="passwordPolicies" DefaultValue="DisablePasswordExpiration" />
            <PersistedClaim ClaimTypeReferenceId="extension_TermsOfServiceConsentDateTime" />
            <PersistedClaim ClaimTypeReferenceId="extension_AccountNumber" />
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="newUser" PartnerClaimType="newClaimsPrincipalCreated" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>
        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteLocalUserPasswordByObjectId-ThrowIfNotExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="newPassword" PartnerClaimType="password" />
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteSocialUserByAlternativeSecurityId-ThrowIfExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item>
            <Item Key="UserMessageIfClaimsPrincipalAlreadyExists">You are already registered. Select the back button and sign in.</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateOtherMailsFromEmail" />
            <InputClaimsTransformation ReferenceId="GetTermsOfServiceConsentDateTime" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="alternativeSecurityId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="alternativeSecurityId" />
            <PersistedClaim ClaimTypeReferenceId="displayName" />
            <PersistedClaim ClaimTypeReferenceId="mailNickname" DefaultValue="Unknown" />
            <PersistedClaim ClaimTypeReferenceId="otherMails" />
            <PersistedClaim ClaimTypeReferenceId="userPrincipalName" />
            <PersistedClaim ClaimTypeReferenceId="extension_TermsOfServiceConsentDateTime" />
            <PersistedClaim ClaimTypeReferenceId="extension_AccountNumber" />
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="newUser" PartnerClaimType="newClaimsPrincipalCreated" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteUserConsentByObjectId-ThrowIfNotExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="GetTermsOfServiceConsentDateTime" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="extension_TermsOfServiceConsentDateTime" />
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteUserProfileByObjectId-ThrowIfNotExists">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="displayName" />
            <PersistedClaim ClaimTypeReferenceId="jobTitle" />
            <PersistedClaim ClaimTypeReferenceId="extension_OrganizationDisplayName" />
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureActiveDirectoryStore-WriteUserRoleByObjectId">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_BusinessCustomerRole" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureActiveDirectoryStore-Common" />
          <!-- <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" /> -->
        </TechnicalProfile>

      </TechnicalProfiles>

    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Azure Application Insights</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="AzureApplicationInsights-Common">
          <DisplayName>Azure Application Insights</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.Insights.AzureApplicationInsightsProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="DeveloperMode">false</Item>
            <Item Key="DisableTelemetry ">false</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="clientId" PartnerClaimType="{property:ClientId}" DefaultValue="{OIDC:ClientId}" />
            <InputClaim ClaimTypeReferenceId="clientIpAddress" PartnerClaimType="{property:ClientIpAddress}" />
            <InputClaim ClaimTypeReferenceId="correlationId" PartnerClaimType="{property:CorrelationId}" />
            <InputClaim ClaimTypeReferenceId="culture" PartnerClaimType="{property:Culture}" DefaultValue="{Culture:RFC5646}" />
            <InputClaim ClaimTypeReferenceId="policyId" PartnerClaimType="{property:PolicyId}" DefaultValue="{Policy:PolicyId}" />
          </InputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="AzureApplicationInsights-AuthenticationStarted">
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="eventName" DefaultValue="AuthenticationStarted" />
          </InputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureApplicationInsights-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureApplicationInsights-AuthenticationCompleted">
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="eventName" DefaultValue="AuthenticationCompleted" />
            <InputClaim ClaimTypeReferenceId="identityProvider" PartnerClaimType="{property:IdentityProvider}" />
            <InputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="{property:ObjectId}" />
          </InputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureApplicationInsights-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AzureApplicationInsights-NewUserCreated">
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="eventName" DefaultValue="NewUserCreated" />
            <InputClaim ClaimTypeReferenceId="identityProvider" PartnerClaimType="{property:IdentityProvider}" />
            <InputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="{property:ObjectId}" />
          </InputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureApplicationInsights-Common" />
        </TechnicalProfile>

      </TechnicalProfiles>

    </ClaimsProvider>

    <ClaimsProvider>
      <!-- The following Domain element allows this profile to be used if the request comes with domain_hint 
           query string parameter, e.g. domain_hint=facebook.com  -->
      <Domain>facebook.com</Domain>
      <DisplayName>Facebook</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="Facebook-OAUTH">
          <!-- The text in the following DisplayName element is shown to the user on the claims provider 
               selection screen. -->
          <DisplayName>Facebook</DisplayName>
          <Protocol Name="OAuth2" />
          <Metadata>
            <Item Key="ProviderName">facebook</Item>
            <Item Key="authorization_endpoint">https://www.facebook.com/dialog/oauth</Item>
            <Item Key="AccessTokenEndpoint">https://graph.facebook.com/oauth/access_token</Item>
            <Item Key="HttpBinding">GET</Item>
            <Item Key="UsePolicyInRedirectUri">0</Item>
            <Item Key="scope">email public_profile</Item>
            <Item Key="ClaimsEndpoint">https://graph.facebook.com/me?fields=id,first_name,last_name,name,email</Item>
            <!-- The Facebook required HTTP GET method, but the access token response is in JSON format from 3/27/2017 -->
            <Item Key="AccessTokenResponseFormat">json</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="client_secret" StorageReferenceId="B2C_1A_Facebook" />
          </CryptographicKeys>
          <InputClaims />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="userId" PartnerClaimType="id" />
            <!-- <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="first_name" />
            <OutputClaim ClaimTypeReferenceId="surname" PartnerClaimType="last_name" /> -->
            <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />
            <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="email" />
            <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="facebook.com" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="socialIdpAuthentication" />
            <OutputClaim ClaimTypeReferenceId="identityProviderAccessToken" PartnerClaimType="{oauth2:access_token}" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId" />
            <OutputClaimsTransformation ReferenceId="CreateExternalUserName" />
            <OutputClaimsTransformation ReferenceId="CreateExternalUserPrincipalName" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-ExternalLogin" />
        </TechnicalProfile>

        <!-- This is the technical profile used to link with Facebook account -->
        <TechnicalProfile Id="Facebook-OAUTH-Link">
          <DisplayName>Link Facebook</DisplayName>
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">identityProviders</Item>
            <Item Key="ClaimValueOnWhichToEnable">Facebook.com</Item>
          </Metadata>
          <InputClaims />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="id" />
            <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="Facebook.com" AlwaysUseDefaultValue="true" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId" />
            <OutputClaimsTransformation ReferenceId="AppendIdtoAlternativeSecurityIds" />
          </OutputClaimsTransformations>
          <IncludeTechnicalProfile ReferenceId="Facebook-OAUTH" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
          <!-- The button will show up only when Facebook.com is missing in issuers claim -->
          <EnabledForUserJourneys>OnItemAbsenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>

        <!-- This is the technical profile used to Unlink a Facebook account -->
        <TechnicalProfile Id="Facebook-OAUTH-Unlink">
          <DisplayName>Unlink Facebook</DisplayName>
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">identityProviders</Item>
            <Item Key="ClaimValueOnWhichToEnable">Facebook.com</Item>
          </Metadata>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="identityProviderToUnlink" DefaultValue="Facebook.com" AlwaysUseDefaultValue="true" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="RemoveIdFromAlternativeSecurityIds" />
          </OutputClaimsTransformations>
          <IncludeTechnicalProfile ReferenceId="Facebook-OAUTH" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
          <!-- The button will show up only when Facebook.com is present in issuers claim -->
          <EnabledForUserJourneys>OnItemExistenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>

      </TechnicalProfiles>

    </ClaimsProvider>

    <ClaimsProvider>
      <Domain>google.com</Domain>
      <DisplayName>Google Account</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="GoogleAccount-OAuth2">
          <DisplayName>Google Account</DisplayName>
          <Protocol Name="OAuth2" />
          <Metadata>
            <Item Key="AccessTokenEndpoint">https://accounts.google.com/o/oauth2/token</Item>
            <Item Key="authorization_endpoint">https://accounts.google.com/o/oauth2/auth</Item>
            <Item Key="ClaimsEndpoint">https://www.googleapis.com/oauth2/v1/userinfo</Item>
            <Item Key="HttpBinding">POST</Item>
            <Item Key="ProviderName">google.com</Item>
            <Item Key="scope">profile email</Item>
            <Item Key="UsePolicyInRedirectUri">false</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="client_secret" StorageReferenceId="B2C_1A_Google" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="loginHint" PartnerClaimType="login_hint" DefaultValue="{OIDC:LoginHint}" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="socialAccountAuthentication" />
            <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />
            <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="email" />
            <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="google.com" />
            <OutputClaim ClaimTypeReferenceId="userId" PartnerClaimType="id" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId" />
            <OutputClaimsTransformation ReferenceId="CreateExternalUserName" />
            <OutputClaimsTransformation ReferenceId="CreateExternalUserPrincipalName" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-ExternalLogin" />
        </TechnicalProfile>

        <!-- This is the technical profile used to link with Google account -->
        <TechnicalProfile Id="GoogleAccount-OAuth2-Link">
          <DisplayName>Link Google</DisplayName>
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">identityProviders</Item>
            <Item Key="ClaimValueOnWhichToEnable">Google.com</Item>
          </Metadata>
          <InputClaims />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="id" />
            <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="Google.com" AlwaysUseDefaultValue="true" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId" />
            <OutputClaimsTransformation ReferenceId="AppendIdtoAlternativeSecurityIds" />
          </OutputClaimsTransformations>
          <IncludeTechnicalProfile ReferenceId="GoogleAccount-OAuth2" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
          <!-- The button will show up only when Google.com is missing in issuers claim -->
          <EnabledForUserJourneys>OnItemAbsenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>

        <!-- This is the technical profile used to Unlink a Google account -->
        <TechnicalProfile Id="GoogleAccount-OAuth2-Unlink">
          <DisplayName>Unlink Google</DisplayName>
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">identityProviders</Item>
            <Item Key="ClaimValueOnWhichToEnable">Google.com</Item>
          </Metadata>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="identityProviderToUnlink" DefaultValue="Google.com" AlwaysUseDefaultValue="true" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="RemoveIdFromAlternativeSecurityIds" />
          </OutputClaimsTransformations>
          <IncludeTechnicalProfile ReferenceId="GoogleAccount-OAuth2" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
          <!-- The button will show up only when Google.com is present in issuers claim -->
          <EnabledForUserJourneys>OnItemExistenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>ID Token Hint</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="IdTokenHint_ExtractClaims">
          <DisplayName>ID Token Hint</DisplayName>
          <Protocol Name="None" />
          <Metadata>

            <!--Sample action required: replace with your endpoint location -->
            <Item Key="METADATA">https://-- deployed app location url --.azurewebsites.net/api/Oidc/.well-known/openid-configuration</Item>

            <!-- <Item Key="IdTokenAudience">your_optional_audience_override</Item> -->

            <!--your_optional_token_issuer_override-->
            <!--<Item Key="issuer">https://localhost:44355/</Item>-->

          </Metadata>
          <OutputClaims>
            <!--Sample: Read the email cliam from the id_token_hint-->
            <OutputClaim ClaimTypeReferenceId="invitedEmail" />
            <OutputClaim ClaimTypeReferenceId="invitedAccountId" />
            <OutputClaim ClaimTypeReferenceId="invitedGroupId" />
          </OutputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Local Account</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="LocalAccount-OpenIdConnect">
          <DisplayName>Local Account OpenID Connect</DisplayName>
          <Protocol Name="OpenIdConnect" />
          <Metadata>
            <Item Key="authorization_endpoint">https://login.microsoftonline.com/{tenant}/oauth2/token</Item>
            <Item Key="HttpBinding">POST</Item>
            <Item Key="METADATA">https://login.microsoftonline.com/{tenant}/.well-known/openid-configuration</Item>
            <Item Key="ProviderName">https://sts.windows.net/</Item>
            <Item Key="response_mode">query</Item>
            <Item Key="response_types">id_token</Item>
            <Item Key="scope">openid email</Item>
            <Item Key="UsePolicyInRedirectUri">False</Item>
            <Item Key="UserMessageIfClaimsPrincipalDoesNotExist">We can't seem to find your account</Item>
            <Item Key="UserMessageIfInvalidPassword">Your password is incorrect</Item>
            <Item Key="UserMessageIfOldPasswordUsed">Looks like you used an old password</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="grantType" PartnerClaimType="grant_type" DefaultValue="password" />
            <InputClaim ClaimTypeReferenceId="signInName" PartnerClaimType="username" Required="true" />
            <InputClaim ClaimTypeReferenceId="password" Required="true" />
            <InputClaim ClaimTypeReferenceId="scope" DefaultValue="openid" />
            <InputClaim ClaimTypeReferenceId="nca" DefaultValue="1" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />
            <!-- <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="local" /> -->
            <OutputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="oid" />
          </OutputClaims>
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <Domain>live.com</Domain>
      <DisplayName>Microsoft Personal Account</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="MicrosoftPersonalAccount-OpenIdConnect">
          <DisplayName>Microsoft Personal Account</DisplayName>
          <Protocol Name="OpenIdConnect"/>
          <OutputTokenFormat>JWT</OutputTokenFormat>
          <Metadata>
            <Item Key="METADATA">https://login.windows.net/consumers/v2.0/.well-known/openid-configuration</Item>
            <Item Key="ProviderName">https://login.microsoftonline.com/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0</Item>
            <Item Key="response_types">id_token</Item>
            <Item Key="scope">openid profile email</Item>
            <Item Key="UsePolicyInRedirectUri">false</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="client_secret" StorageReferenceId="B2C_1A_MSA"/>
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="loginHint" PartnerClaimType="login_hint" DefaultValue="{OIDC:LoginHint}" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="socialAccountAuthentication" />
            <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />
            <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="preferred_username" />
            <OutputClaim ClaimTypeReferenceId="identityprovider" DefaultValue="live.com" />
            <OutputClaim ClaimTypeReferenceId="userId" PartnerClaimType="oid" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId" />
            <OutputClaimsTransformation ReferenceId="CreateExternalUserName" />
            <OutputClaimsTransformation ReferenceId="CreateExternalUserPrincipalName" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-ExternalLogin" />
        </TechnicalProfile>

        <TechnicalProfile Id="MicrosoftPersonalAccount-OpenIdConnect-Link">
          <DisplayName>Link Microsoft Account</DisplayName>
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">identityProviders</Item>
            <Item Key="ClaimValueOnWhichToEnable">live.com</Item>
          </Metadata>
          <InputClaims />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="sub" />
            <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="live.com" AlwaysUseDefaultValue="true" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId" />
            <OutputClaimsTransformation ReferenceId="AppendIdtoAlternativeSecurityIds" />
          </OutputClaimsTransformations>
          <IncludeTechnicalProfile ReferenceId="MicrosoftPersonalAccount-OpenIdConnect" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
          <EnabledForUserJourneys>OnItemAbsenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>

        <TechnicalProfile Id="MicrosoftPersonalAccount-OpenIdConnect-Unlink">
          <DisplayName>Unlink MSA</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">identityProviders</Item>
            <Item Key="ClaimValueOnWhichToEnable">live.com</Item>
          </Metadata>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="live.com" AlwaysUseDefaultValue="true" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="RemoveIdFromAlternativeSecurityIds" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
          <EnabledForUserJourneys>OnItemExistenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <Domain>commonaad</Domain>
      <DisplayName>Common AAD</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="MicrosoftWorkAccount-OpenIdConnect">
          <DisplayName>Multi-Tenant AAD</DisplayName>
          <Protocol Name="OpenIdConnect" />
          <Metadata>
            <!-- Update the Client ID below to the Application ID -->
            <Item Key="client_id">32e26e5a-8a00-4d1a-8ff3-e90a5615be38</Item>
            <Item Key="UsePolicyInRedirectUri">0</Item>
            <Item Key="METADATA">https://login.microsoftonline.com/common/.well-known/openid-configuration</Item>
            <Item Key="response_types">code</Item>
            <Item Key="scope">openid</Item>
            <Item Key="response_mode">form_post</Item>
            <Item Key="HttpBinding">POST</Item>
            <Item Key="DiscoverMetadataByTokenIssuer">true</Item>

            <Item Key="ValidTokenIssuerPrefixes">https://sts.windows.net/</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="client_secret" StorageReferenceId="B2C_1A_AADSecret" />
          </CryptographicKeys>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="enterpriseAccountAuthentication" />
            <OutputClaim ClaimTypeReferenceId="identityProvider" PartnerClaimType="iss" />
            <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />

            <OutputClaim ClaimTypeReferenceId="jobTitle" PartnerClaimType="userJobTitle" />
            <OutputClaim ClaimTypeReferenceId="tenantId" PartnerClaimType="idp" />
            <OutputClaim ClaimTypeReferenceId="userId" PartnerClaimType="oid" />
            <OutputClaim ClaimTypeReferenceId="extension_OrganizationDisplayName" PartnerClaimType="organizationDisplayName" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <!--OutputClaimsTransformation ReferenceId="CreateMicrosoftWorkIdentityProvider" /-->
            <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId" />
            <OutputClaimsTransformation ReferenceId="CreateExternalUserName" />
            <OutputClaimsTransformation ReferenceId="CreateExternalUserPrincipalName" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-ExternalLogin" />
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>REST APIs</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="RestApi-ThrowError">
          <DisplayName>Validate User Account Id</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://-- deployed app location url --.azurewebsites.net/api/ThrowError</Item>
            <Item Key="AuthenticationType">None</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="AllowInsecureAuthInProduction">true</Item>
          </Metadata>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RestApi-ValidateUserAccountId">
          <DisplayName>Validate User Account Id</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://-- deployed app location url --.azurewebsites.net/api/ValidateUserAccountId</Item>
            <Item Key="AuthenticationType">None</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="AllowInsecureAuthInProduction">true</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="extension_AccountNumber" PartnerClaimType="accountId" />
          </InputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RestApi-CalculateUserProfileCompletePercentage">
          <DisplayName>Calculate User Profile Complete Percentage</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://-- deployed app location url --.azurewebsites.net/api/UserProfileCalcluateProfileCompletePercentage</Item>
            <Item Key="AuthenticationType">None</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="AllowInsecureAuthInProduction">true</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="mfaType" PartnerClaimType="mfaType"/>
            <InputClaim ClaimTypeReferenceId="extension_IsAllergensAdded" PartnerClaimType="IsAllergensAdded"/>
            <InputClaim ClaimTypeReferenceId="extension_SocialAccountLinked" PartnerClaimType="IsSocialAccountLinked"/>
            <InputClaim ClaimTypeReferenceId="consentToShareAllergyInfo" PartnerClaimType="ConsentToShareAllegyInfo"/>
            <InputClaim ClaimTypeReferenceId="identityProvider" PartnerClaimType="IdentityProvider"/>
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="ProfileCompletion" PartnerClaimType="UserProfileCompletePercentage" DefaultValue="0"/>
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RestApi-MakeInviteUrl">
          <DisplayName>Send invitation to external users</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://-- deployed app location url --.azurewebsites.net/api/MailService/MakeInviteUrl</Item>
            <Item Key="AuthenticationType">None</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="AllowInsecureAuthInProduction">true</Item>
          </Metadata>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateFromMailAddress" />
          </InputClaimsTransformations>
          <InputClaims>
            <!-- <InputClaim ClaimTypeReferenceId="fromMailAddress" PartnerClaimType="FromAddress"/>
            <InputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="FromName"/> -->
            <InputClaim ClaimTypeReferenceId="extension_UserEmailToInvite" PartnerClaimType="ToAddress"/>
            <InputClaim ClaimTypeReferenceId="extension_GroupName" PartnerClaimType="GroupName"/>
            <InputClaim ClaimTypeReferenceId="extension_AccountNumber" PartnerClaimType="AccountNumber"/>
            <InputClaim ClaimTypeReferenceId="appLogo" PartnerClaimType="AppLogo" DefaultValue="{OAUTH-KV:logo}"/>
            <InputClaim ClaimTypeReferenceId="appBackground" PartnerClaimType="AppBackground" DefaultValue="{OAUTH-KV:bkg}"/>
            <InputClaim ClaimTypeReferenceId="Culture" PartnerClaimType="Culture" DefaultValue="{Culture:RFC5646}"/>
          </InputClaims>

          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="Url" Required="true" />
          </OutputClaims>

          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RestApi-SendEmailCodeToUser">
          <DisplayName>Send Email verification code to the user email</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://-- deployed app location url --.azurewebsites.net/api/MailService/SendEmailCode</Item>
            <Item Key="AuthenticationType">None</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="AllowInsecureAuthInProduction">true</Item>
          </Metadata>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateFromMailAddress" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="fromMailAddress" PartnerClaimType="FromAddress"/>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="ToAddress"/>
            <InputClaim ClaimTypeReferenceId="otp" PartnerClaimType="EmailCode"/>
            <InputClaim ClaimTypeReferenceId="Culture" PartnerClaimType="Culture" DefaultValue="{Culture:RFC5646}"/>
          </InputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RestApi-SendUsernameToEmail">
          <DisplayName>Send user name to the user email</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://-- deployed app location url --.azurewebsites.net/api/MailService/SendUsernameToEmail</Item>
            <Item Key="AuthenticationType">None</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="AllowInsecureAuthInProduction">true</Item>
          </Metadata>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateFromMailAddress" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="fromMailAddress" PartnerClaimType="FromAddress"/>
            <InputClaim ClaimTypeReferenceId="extension_AccountNumber" PartnerClaimType="AccountNumber"/>
            <InputClaim ClaimTypeReferenceId="extension_PhoneNumber" PartnerClaimType="PhoneNumber"/>
            <InputClaim ClaimTypeReferenceId="Culture" PartnerClaimType="Culture" DefaultValue="{Culture:RFC5646}"/>
          </InputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <!--TOTP Profiles-->
        <!--The following technical profile generates a time-based one-time password (TOTP).
        We use the technical  profile to register new user-->
        <TechnicalProfile Id="AppFactor-GenerateTotpWebHook">
          <DisplayName>Generate TOTP Web Hook Azure Function</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://-- deployed app location url --.azurewebsites.net/api/identity/Generate</Item>
            <Item Key="AuthenticationType">None</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="AllowInsecureAuthInProduction">true</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="userName" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="strongAuthenticationAppQRCodeBitmap" PartnerClaimType="qrCodeBitmap" />
            <OutputClaim ClaimTypeReferenceId="extension_StrongAuthenticationAppSecretKey" PartnerClaimType="secretKey" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <!-- The following technical profile verifies a time-based one-time password (TOTP).
        We call this technical profile during registration process and sign-in process-->
        <TechnicalProfile Id="AppFactor-VerifyTotpWebHook">
          <DisplayName>Verify TOTP Web Hook Azure Function</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://-- deployed app location url --.azurewebsites.net/api/identity/verify</Item>
            <Item Key="AuthenticationType">None</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="AllowInsecureAuthInProduction">true</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="strongAuthenticationAppCode" PartnerClaimType="totpCode" />
            <InputClaim ClaimTypeReferenceId="extension_StrongAuthenticationAppSecretKey" PartnerClaimType="secretKey" />
            <InputClaim ClaimTypeReferenceId="extension_StrongAuthenticationAppTimeStepMatched" PartnerClaimType="timeStepMatched" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_StrongAuthenticationAppTimeStepMatched" PartnerClaimType="timeStepMatched" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <!-- SendGrid Profiles -->
        <!-- For processing the email communication via SendGrid API -->
        <TechnicalProfile Id="SendGrid-Common">
          <DisplayName>Use SendGrid's email API to send the code the the user</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://api.sendgrid.com/v3/mail/send</Item>
            <Item Key="AuthenticationType">Bearer</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="ClaimUsedForRequestPayload">sendGridReqBody</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="BearerAuthenticationToken" StorageReferenceId="B2C_1A_SendGrid" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="sendGridReqBody" />
          </InputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="SendGrid-Otp">
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="GenerateSendGridRequestBody-Otp" />
          </InputClaimsTransformations>
          <IncludeTechnicalProfile ReferenceId="SendGrid-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="SendGrid-InviteExternalUser">
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="GenerateSendGridRequestBody-Invite" />
          </InputClaimsTransformations>
          <IncludeTechnicalProfile ReferenceId="SendGrid-Common" />
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Self Asserted</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="SelfAsserted-Account-AllergyConsent">
          <DisplayName>Account Terms of Service</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.account.allergyinformation</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Update</Item>
            <Item Key="setting.showCancelButton">false</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="consentToShareAllergyInfo" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="consentToShareAllergyInfo" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteUserAllergicConsentByObjectId-ThrowIfNotExists" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-Account-AllergyInformation">
          <DisplayName>Account Terms of Service</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.account.allergyinformation</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Update</Item>
            <Item Key="setting.showCancelButton">false</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="extension_Allergens" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_Allergens" />
            <OutputClaim ClaimTypeReferenceId="newAllergyDetails" DefaultValue="true"/>
            <OutputClaim ClaimTypeReferenceId="extension_AllergensRemindMeLater" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteUserAllergicInfoByObjectId-ThrowIfNotExists">
              <Preconditions>
                <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                  <Value>extension_AllergensRemindMeLater</Value>
                  <Value>True</Value>
                  <Action>SkipThisValidationTechnicalProfile</Action>
                </Precondition>
              </Preconditions>
            </ValidationTechnicalProfile>
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-Account-Invitation">
          <DisplayName>Account Invitiation</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.account.inviteUserByEmail</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Send</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="LocalizedStringAssignment-Invite" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="extension_GroupName" DefaultValue=""/>
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_GroupName" Required="true"/>
            <OutputClaim ClaimTypeReferenceId="extension_UserEmailToInvite" Required="true"/>
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteInvitationDetailsByObjectId-ThrowIfNotExists" />
            <ValidationTechnicalProfile ReferenceId="RestApi-MakeInviteUrl" />
            <ValidationTechnicalProfile ReferenceId="SendGrid-InviteExternalUser" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-Account-ProfileUpdate-AllergyInformation">
          <DisplayName>Account Terms of Service</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.account.allergyinformation</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Update</Item>
            <Item Key="AllowGenerationOfClaimsWithNullValues">true</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>

            <InputClaim ClaimTypeReferenceId="objectId" />
            <InputClaim ClaimTypeReferenceId="displayName" />

            <InputClaim ClaimTypeReferenceId="extension_Allergens" />
            <InputClaim ClaimTypeReferenceId="consentToShareAllergyInfo" />
          </InputClaims>
          <OutputClaims>

            <OutputClaim ClaimTypeReferenceId="displayName" Required="true" />

            <OutputClaim ClaimTypeReferenceId="extension_Allergens" />
            <OutputClaim ClaimTypeReferenceId="consentToShareAllergyInfo"/>

          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteUserProfileAndUserAllergicInfoByObjectId-ThrowIfNotExists" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>


        <TechnicalProfile Id="SelfAsserted-LocalAccount-Registration">
          <DisplayName>Local Account Registration</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.registration</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Create</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="TermsAndCondition" DefaultValue="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"/>
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="Verified.Email" Required="true" />
            <OutputClaim ClaimTypeReferenceId="newPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="displayName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="extension_AccountNumber" Required="true" />
            <OutputClaim ClaimTypeReferenceId="TermsAndCondition"/>
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />

            <OutputClaim ClaimTypeReferenceId="newUser" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="RestApi-ValidateUserAccountId" />
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteLocalUserByEmail-ThrowIfExists" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-Registration-CustomEmail">
          <DisplayName>Local Account Registration</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.registration</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Create</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="LocalizedStringAssignment-Otp" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="TermsAndCondition" DefaultValue="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"/>
          </InputClaims>
          <DisplayClaims>
            <DisplayClaim DisplayControlReferenceId="emailVerificationSendGrid" />
            <DisplayClaim ClaimTypeReferenceId="newPassword" Required="true" />
            <DisplayClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
            <DisplayClaim ClaimTypeReferenceId="displayName" Required="true" />
            <DisplayClaim ClaimTypeReferenceId="extension_AccountNumber" Required="true" />
            <DisplayClaim ClaimTypeReferenceId="TermsAndCondition"/>
            <DisplayClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="email" Required="true" />
            <OutputClaim ClaimTypeReferenceId="newPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="displayName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="extension_AccountNumber" Required="true" />
            <OutputClaim ClaimTypeReferenceId="TermsAndCondition"/>
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />
            <!-- <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="local" /> -->
            <OutputClaim ClaimTypeReferenceId="newUser" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="RestApi-ValidateUserAccountId" />
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteLocalUserByEmail-ThrowIfExists" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-AgeGating">
          <DisplayName>Progressive Profiling for Age Gating</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.localAccountAgeGating</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Update</Item>
            <Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">Unfortunately, your sign on has been blocked. Privacy and online safety laws in your country prevent access to accounts belonging to children.</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="dateOfBirth" Required="true"/>
            <OutputClaim ClaimTypeReferenceId="legalCountry" Required="true"/>

            <OutputClaim ClaimTypeReferenceId="blockMinorUser" DefaultValue="false"/>
            <OutputClaim ClaimTypeReferenceId="legalAgeGroupClassification" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="ageGroup" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor" DefaultValue=""/>

            <OutputClaim ClaimTypeReferenceId="responseCode" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="responseMsg" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="response" DefaultValue=""/>

            <OutputClaim ClaimTypeReferenceId="isSelfAssertedAgeGating" DefaultValue="true" />

          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="EvaluateBlockMinorUserProfile" />
            <!-- <ValidationTechnicalProfile ReferenceId="ValidateMinor" /> -->
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-SocialAccount-Registration-WithAgeGating">
          <DisplayName>Local Account Registration</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.socialaccount.registrationAgeGating</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Create</Item>
            <Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">Unfortunately, your sign on has been blocked. Privacy and online safety laws in your country prevent access to accounts belonging to children.</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="displayName" />
            <InputClaim ClaimTypeReferenceId="TermsAndCondition" DefaultValue="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"/>
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="displayName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="extension_AccountNumber" Required="true" />

            <!-- AgeGating related claims -->
            <OutputClaim ClaimTypeReferenceId="dateOfBirth" Required="true"/>
            <OutputClaim ClaimTypeReferenceId="legalCountry" Required="true"/>
            <OutputClaim ClaimTypeReferenceId="blockMinorUser" DefaultValue="false"/>
            <OutputClaim ClaimTypeReferenceId="legalAgeGroupClassification" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="ageGroup" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor" DefaultValue=""/>

            <OutputClaim ClaimTypeReferenceId="responseCode" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="responseMsg" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="response" DefaultValue=""/>

            <OutputClaim ClaimTypeReferenceId="executed-SelfAsserted-Input" DefaultValue="true" />

            <OutputClaim ClaimTypeReferenceId="TermsAndCondition"/>
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
            <OutputClaim ClaimTypeReferenceId="newUser" />
            <OutputClaim ClaimTypeReferenceId="objectId" />

          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="EvaluateBlockMinorUserProfile" />
            <ValidationTechnicalProfile ReferenceId="RestApi-ValidateUserAccountId" />
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteSocialUserByAlternativeSecurityId-WithAgeGating-ThrowIfExists">
              <Preconditions>
                <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                  <Value>blockMinorUser</Value>
                  <Value>True</Value>
                  <Action>SkipThisValidationTechnicalProfile</Action>
                </Precondition>
              </Preconditions>
            </ValidationTechnicalProfile>
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-ProgressiveProfile-AgeGating">
          <DisplayName>Progressive Profiling for Age Gating</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.account.progressiveProfileAgeGating</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Update</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="dateOfBirth" />
            <InputClaim ClaimTypeReferenceId="legalCountry" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="dateOfBirth" Required="true"/>
            <OutputClaim ClaimTypeReferenceId="legalCountry" Required="true"/>
            <OutputClaim ClaimTypeReferenceId="ageGatingValuesChanged" />
            <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor"/>
          </OutputClaims>
          <!-- The age gating logic here covers both the scenario of collecting DOB/legalCountry for the first time and the edge case where DOB/legalCountry is missing -->
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="EvaluateAgeGroupProfile" />
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteAgeGatingDetailsByObjectId-ThrowIfNotExists" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-LoginByUsername">
          <DisplayName>Local Account</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.loginByUsername</Item>
            <Item Key="setting.operatingMode">Username</Item>
            <Item Key="SignUpTarget">SelfAssertedLocalAccountRegistrationExchange</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="signInName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="password" Required="true" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" />
            <!-- <OutputClaim ClaimTypeReferenceId="identityProvider" /> -->
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="LocalAccount-OpenIdConnect" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-Login-FromInvitation">
          <DisplayName>Local Account</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.login</Item>
            <Item Key="setting.operatingMode">Email</Item>
            <Item Key="setting.showSignupLink	">false</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateSignInNameFromInvitationEmail" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="signInName" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="signInName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="password" Required="true" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" />
            <!-- <OutputClaim ClaimTypeReferenceId="identityProvider" /> -->
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="LocalAccount-OpenIdConnect" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-RegistrationByUsername">
          <DisplayName>Local Account Registration</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.registrationByUsername</Item>
            <Item Key="setting.operatingMode">Username</Item>
            <Item Key="SignUpTarget">SelfAssertedLocalAccountRegistrationExchange</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Create</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="TermsAndCondition" DefaultValue="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"/>
          </InputClaims>

          <DisplayClaims>
            <DisplayClaim ClaimTypeReferenceId="signInName" Required="true" />
            <DisplayClaim ClaimTypeReferenceId="newPassword" Required="true" />
            <DisplayClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
            <DisplayClaim ClaimTypeReferenceId="displayName" Required="true" />
            <DisplayClaim DisplayControlReferenceId="emailVerificationControl"/>
            <DisplayClaim ClaimTypeReferenceId="extension_AccountNumber" Required="true" />
            <DisplayClaim ClaimTypeReferenceId="TermsAndCondition"/>
            <DisplayClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
          </DisplayClaims>

          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="signInName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="newPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="displayName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="email" Required="true" />
            <OutputClaim ClaimTypeReferenceId="extension_AccountNumber" Required="true" />

            <OutputClaim ClaimTypeReferenceId="TermsAndCondition"/>
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />
            <!-- <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="local" /> -->
            <OutputClaim ClaimTypeReferenceId="newUser" />
            <OutputClaim ClaimTypeReferenceId="objectId" />

          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteLocalUserByUsername-ThrowIfExists"/>
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-RegistrationByUsername-WithAgeGating">
          <DisplayName>Local Account Registration</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.registrationByUsernameAgeGating</Item>
            <Item Key="setting.operatingMode">Username</Item>
            <Item Key="SignUpTarget">SelfAssertedLocalAccountRegistrationExchange</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Create</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="TermsAndCondition" DefaultValue="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"/>
          </InputClaims>
          <DisplayClaims>
              <DisplayClaim ClaimTypeReferenceId="signInName" Required="true" />
              <DisplayClaim ClaimTypeReferenceId="newPassword" Required="true" />
              <DisplayClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
              <DisplayClaim ClaimTypeReferenceId="displayName" Required="true" />
              <DisplayClaim DisplayControlReferenceId="emailVerificationControl"/>
              <DisplayClaim ClaimTypeReferenceId="extension_AccountNumber" Required="true" />
               <!-- Age gating related claims -->
              <DisplayClaim ClaimTypeReferenceId="dateOfBirth" Required="true"/>
              <DisplayClaim ClaimTypeReferenceId="legalCountry" Required="true"/>              
              <DisplayClaim ClaimTypeReferenceId="TermsAndCondition"/>
              <DisplayClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="signInName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="newPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="displayName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="email" Required="true" />
            <OutputClaim ClaimTypeReferenceId="extension_AccountNumber" Required="true" />

            <!-- Age gating related claims -->
            <OutputClaim ClaimTypeReferenceId="dateOfBirth" Required="true"/>
            <OutputClaim ClaimTypeReferenceId="legalCountry" Required="true"/>            

            <OutputClaim ClaimTypeReferenceId="TermsAndCondition"/>
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />
            <!-- <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="local" /> -->
            <OutputClaim ClaimTypeReferenceId="newUser" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
            
            <OutputClaim ClaimTypeReferenceId="blockMinorUser" DefaultValue="false"/>
            <OutputClaim ClaimTypeReferenceId="legalAgeGroupClassification" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="ageGroup" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="responseCode" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="responseMsg" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="response" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="executed-SelfAsserted-Input" DefaultValue="true" />

          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="SetFeatureDefaultValue" />
            <ValidationTechnicalProfile ReferenceId="EvaluateBlockMinorUserProfile" />
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteLocalUserByUsername-ThrowIfExists">
              <Preconditions>
                <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                  <Value>blockMinorUser</Value>
                  <Value>True</Value>
                  <Action>SkipThisValidationTechnicalProfile</Action>
                </Precondition>
              </Preconditions>
            </ValidationTechnicalProfile>
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-RegistrationFromInvitation">
          <DisplayName>Local Account Registration</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.registrationFromInvitation</Item>
            <Item Key="setting.operatingMode">Email</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Create</Item>
            <Item Key="EnforceEmailVerification">false</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateAccountIdFromInvitationAccountId" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="TermsAndCondition" DefaultValue="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"/>
            <InputClaim ClaimTypeReferenceId="invitedEmail" />
            <InputClaim ClaimTypeReferenceId="invitedAccountId" />
            <InputClaim ClaimTypeReferenceId="invitedGroupId" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="invitedEmail" Required="true"/>
            <OutputClaim ClaimTypeReferenceId="newPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="displayName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="invitedAccountId" Required="true" />
            <OutputClaim ClaimTypeReferenceId="invitedGroupId" Required="true"/>
            <OutputClaim ClaimTypeReferenceId="TermsAndCondition"/>
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />
            <!-- <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="local" /> -->
            <OutputClaim ClaimTypeReferenceId="newUser" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="RestApi-ValidateUserAccountId" />
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteLocalUserByInvitationEmail-ThrowIfExists" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-LoginByPhoneAndPassword">
          <DisplayName>Local Account</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.loginByPhone</Item>
            <Item Key="setting.operatingMode">Username</Item>
            <Item Key="SignUpTarget">SelfAssertedLocalAccountRegistrationExchange</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="signInName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="password" Required="true" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" />
            <!-- <OutputClaim ClaimTypeReferenceId="identityProvider" /> -->
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="LocalAccount-OpenIdConnect" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-LoginByPhone">
          <DisplayName>Local Account</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.loginByPhoneCode</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_PhoneNumber" Required="true" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-UserReadUsingPhoneNumber-ThrowIfNotExists" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-ForgotUserName">
          <DisplayName>Forgot your username?</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.forgotUsername</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_AccountNumber" Required="true" />
            <OutputClaim ClaimTypeReferenceId="extension_PhoneNumber" Required="true" />
            <OutputClaim ClaimTypeReferenceId="isForgotUserNameFlow" DefaultValue="true"/>
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-ForgotUsernamMessage">
          <DisplayName>Password reset</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.forgotUsernameMessage</Item>
            <!--Demo: hide the continue and cancel buttons -->
            <Item Key="setting.showContinueButton">false</Item>
            <Item Key="setting.showCancelButton">false</Item>
          </Metadata>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="GetForgotUsernamMessage" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="userMessage" />
          </InputClaims>
          <OutputClaims>
            <!--Demo: Show the paragraph claim with the message to the user -->
            <OutputClaim ClaimTypeReferenceId="userMessage" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="RestApi-ThrowError" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-RegistrationByPhone">
          <DisplayName>Local Account Registration</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.registration</Item>
            <Item Key="setting.operatingMode">Username</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Create</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="TermsAndCondition" DefaultValue="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"/>
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_PhoneNumber" Required="true" />
            <OutputClaim ClaimTypeReferenceId="newPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="displayName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="extension_AccountNumber" Required="true" />
            <OutputClaim ClaimTypeReferenceId="TermsAndCondition"/>
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />
            <!-- <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="local" /> -->
            <OutputClaim ClaimTypeReferenceId="newUser" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteLocalUserByPhone-ThrowIfExists" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-RegistrationByPhoneAndOtp">
          <DisplayName>Local Account Registration</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.registrationByPhoneCode</Item>
            <Item Key="setting.operatingMode">Username</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Create</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="TermsAndCondition" DefaultValue="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"/>
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_PhoneNumber" Required="true" />
            <OutputClaim ClaimTypeReferenceId="displayName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="extension_AccountNumber" Required="true" />
            <OutputClaim ClaimTypeReferenceId="TermsAndCondition"/>
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />
            <!-- <OutputClaim ClaimTypeReferenceId="identityProvider" DefaultValue="local" /> -->
            <OutputClaim ClaimTypeReferenceId="newUser" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteLocalUserByPhone-ThrowIfExists" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-Account-TermsOfServiceConsent">
          <DisplayName>Account Terms of Service</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.account.termsofservice</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Update</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteUserConsentByObjectId-ThrowIfNotExists" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-EnterpriseAccount-Registration">
          <DisplayName>Local Account Registration</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.enterpriseaccount.registration</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Create</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="displayName" />
            <InputClaim ClaimTypeReferenceId="jobTitle" />
            <InputClaim ClaimTypeReferenceId="extension_OrganizationDisplayName" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="displayName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="extension_OrganizationDisplayName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="jobTitle" Required="true" />
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
            <OutputClaim ClaimTypeReferenceId="newUser" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="extension_BusinessCustomerRole" />
            <OutputClaim ClaimTypeReferenceId="extension_CustomerType" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteEnterpriseUserByAlternativeSecurityId-ThrowIfExists" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-Login">
          <DisplayName>Local Account</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.login</Item>
            <Item Key="setting.operatingMode">Email</Item>
            <Item Key="SignUpTarget">SelfAssertedLocalAccountRegistrationExchange</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="signInName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="password" Required="true" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" />
            <!-- <OutputClaim ClaimTypeReferenceId="identityProvider" /> -->
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="LocalAccount-OpenIdConnect" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-PasswordRecovery">
          <DisplayName>Local Account Password Recovery</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.password</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <IncludeInSso>false</IncludeInSso>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="Verified.Email" Required="true" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-ReadUserByEmail-ThrowIfNotExists" />
          </ValidationTechnicalProfiles>
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-LocalAccount-PasswordReset">
          <DisplayName>Local Account Password Reset</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccount.password</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="newPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteLocalUserPasswordByObjectId-ThrowIfNotExists" />
          </ValidationTechnicalProfiles>
        </TechnicalProfile>



        <TechnicalProfile Id="SelfAsserted-PersonalAccount-ProfileUpdate">
          <DisplayName>Local Account Registration</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.account.profile</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Update</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" />
            <InputClaim ClaimTypeReferenceId="displayName" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="displayName" Required="true" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteUserProfileByObjectId-ThrowIfNotExists" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-SocialAccount-Registration">
          <DisplayName>Local Account Registration</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.socialaccount.registration</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Create</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="TermsAndCondition" DefaultValue="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"/>
            <InputClaim ClaimTypeReferenceId="displayName" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="displayName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="extension_AccountNumber" Required="true" />
            <OutputClaim ClaimTypeReferenceId="TermsAndCondition"/>
            <OutputClaim ClaimTypeReferenceId="extension_AgreedToTermsOfService" Required="true" />
            <OutputClaim ClaimTypeReferenceId="newUser" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="RestApi-ValidateUserAccountId" />
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteSocialUserByAlternativeSecurityId-ThrowIfExists" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-WorkAccount-ProfileUpdate">
          <DisplayName>Local Account Registration</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.account.profile</Item>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="language.button_continue">Update</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" />
            <InputClaim ClaimTypeReferenceId="displayName" />
            <InputClaim ClaimTypeReferenceId="jobTitle" />
            <InputClaim ClaimTypeReferenceId="extension_OrganizationDisplayName" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="displayName" Required="true" />
            <OutputClaim ClaimTypeReferenceId="jobTitle" Required="true" />
            <OutputClaim ClaimTypeReferenceId="extension_OrganizationDisplayName" Required="true" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureActiveDirectoryStore-WriteUserProfileByObjectId-ThrowIfNotExists" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-Noop" />
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Claim Transformation</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="SetFeatureDefaultValue">
          <DisplayName>Set Feature Default Values</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="blockMinorUser" DefaultValue="false" />
            <OutputClaim ClaimTypeReferenceId="ageGatingValuesChanged" DefaultValue="false"/>
            <OutputClaim ClaimTypeReferenceId="ignoreConsent" DefaultValue="false"/>
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="CalculateFeatureDefaultValue">
          <DisplayName>Calculate Feature Default Values</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="skipProgressiveProfilePage" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="IsDateOfBirthPresent" />
            <OutputClaimsTransformation ReferenceId="isLegalCountryPresent" />
            <OutputClaimsTransformation ReferenceId="EvaluateSkipProgressiveProfilePage" />
          </OutputClaimsTransformations>
        </TechnicalProfile>

        <TechnicalProfile Id="EvaluateAgeGroupProfile">
          <DisplayName>Evaluate age Group</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="ageGroup" DefaultValue="Undefined" />
            <OutputClaim ClaimTypeReferenceId="ageGatingValuesChanged" DefaultValue="false" />
            <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="ReEvaluateAgeGroupAndConsent" />
            <OutputClaimsTransformation ReferenceId="HasAgeGroupValueChanged" />
            <OutputClaimsTransformation ReferenceId="UpdateAgeGroup" />
            <OutputClaimsTransformation ReferenceId="HasConsentProvidedForMinorValueChanged" />
            <OutputClaimsTransformation ReferenceId="UpdateConsentProvidedForMinor" />
            <OutputClaimsTransformation ReferenceId="EvaluateAgeGatingValuesChanged" />
          </OutputClaimsTransformations>
        </TechnicalProfile>

        <TechnicalProfile Id="EvaluateBlockMinorUserProfile_UsingLegalAgeGroupClassification">
          <DisplayName>Evaluate Block User Using LegalAgeGroupClassification claim</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <InputClaims>
            <!-- legalAgeGroupClassification is readonly claim  and gets set only by AAD based on ageGroup value. 
          So we are writing ageGroup value in AADWrite call. This internally sets legalAgeGroupClassification -->
            <InputClaim ClaimTypeReferenceId="legalAgeGroupClassification" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="responseCode" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="responseMsg" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="blockMinorUser" Required="true" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="SetIsLegalAgeGroupClassificationUndefined" />
            <OutputClaimsTransformation ReferenceId="SetIsLegalAgeGroupClassificationMinorWithoutConsent" />
            <OutputClaimsTransformation ReferenceId="CalculateIsUserMinorAndRequireParentalConsent" />
            <OutputClaimsTransformation ReferenceId="SetIsMinor" />
            <OutputClaimsTransformation ReferenceId="SetIsUserMinorAndIgnoreConsent" />
            <OutputClaimsTransformation ReferenceId="SetIsMinorShouldBeBlocked" />
            <OutputClaimsTransformation ReferenceId="GetResponseMsgMappedToResponseCode" />
            <OutputClaimsTransformation ReferenceId="MergeResponseMsgAndCode" />
          </OutputClaimsTransformations>
        </TechnicalProfile>

        <TechnicalProfile Id="EvaluateBlockMinorUserProfile">
          <DisplayName>Evaluate Block User</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="responseMsg" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="responseCode" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="response" DefaultValue=""/>
            <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor"/>
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CalculateAgeGroupAndConsent" />
            <OutputClaimsTransformation ReferenceId="SetIsMinor" />
            <OutputClaimsTransformation ReferenceId="IsUserMinorAndRequireParentalConsent" />
            <OutputClaimsTransformation ReferenceId="SetIsUserMinorAndIgnoreConsent" />
            <OutputClaimsTransformation ReferenceId="SetIsMinorShouldBeBlocked" />
            <OutputClaimsTransformation ReferenceId="GetResponseMsgMappedToResponseCode" />
            <OutputClaimsTransformation ReferenceId="MergeResponseMsgAndCode" />
          </OutputClaimsTransformations>
        </TechnicalProfile>

        <TechnicalProfile Id="ValidateMinor">
          <DisplayName>Evaluate Block User</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="blockMinorUser" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="blockMinorUser" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="AssertBlockMinorUserIsFalse" />
          </OutputClaimsTransformations>
        </TechnicalProfile>

        <!-- <TechnicalProfile Id="ClearSesionValues">
              <DisplayName>Unlink Facebook</DisplayName>
              <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
              <OutputClaims>
                  <OutputClaim ClaimTypeReferenceId="objectId" DefaultValue="facebook.com" AlwaysUseDefaultValue="true" />
              </OutputClaims>
              <OutputClaimsTransformations>
                  <OutputClaimsTransformation ReferenceId="SetObjectIdToNull" />
                  <OutputClaimsTransformation ReferenceId="SetIdentityProviderToNull" />
                  <OutputClaimsTransformation ReferenceId="SetAlternativeSecurityIdToNull" />
              </OutputClaimsTransformations>
              <UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-AzureActiveDirectory" />
          </TechnicalProfile> -->

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>One time password technical profiles</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="GenerateOtp">
          <DisplayName>Generate one time password</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.OneTimePasswordProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="Operation">GenerateCode</Item>
            <Item Key="CodeExpirationInSeconds">1200</Item>
            <Item Key="CodeLength">6</Item>
            <Item Key="CharacterSet">0-9</Item>
            <Item Key="ReuseSameCode">false</Item>
            <Item Key="MaxNumAttempts">5</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="identifier" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="otp" PartnerClaimType="otpGenerated" />
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="VerifyOtp">
          <DisplayName>Verify one time password</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.OneTimePasswordProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="Operation">VerifyCode</Item>
            <Item Key="UserMessage.VerificationHasExpired">You have exceed the maximum time allowed.</Item>
            <Item Key="UserMessage.MaxRetryAttemped">You have exceed the number of retries allowed.</Item>
            <Item Key="UserMessage.InvalidCode">You have entered the wrong code.</Item>
            <Item Key="UserMessage.ServerError">Cannot verify the code, please try again later.</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="identifier" />
            <InputClaim ClaimTypeReferenceId="verificationCode" PartnerClaimType="otpToVerify" />
          </InputClaims>
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Session Management</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="SSOSession-AzureActiveDirectory">
          <DisplayName>Azure Active Directory Session Management</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.SSO.DefaultSSOSessionProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="authenticationSource" />
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="identityProvider" />
            <PersistedClaim ClaimTypeReferenceId="newUser" />
            <PersistedClaim ClaimTypeReferenceId="executed-SelfAsserted-Input" />
            <PersistedClaim ClaimTypeReferenceId="extension_IsPhoneNumberVerified" />
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="hasAzureActiveDirectorySSOSession" DefaultValue="true" />
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="SSOSession-ExternalLogin">
          <DisplayName>External Login Session Mananagement</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.SSO.ExternalLoginSSOSessionProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="AlwaysFetchClaimsFromProvider">true</Item>
          </Metadata>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="identityProvider" />
            <PersistedClaim ClaimTypeReferenceId="alternativeSecurityId" />
            <PersistedClaim ClaimTypeReferenceId="identityProviderAccessToken" />
          </PersistedClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="SSOSession-Noop">
          <DisplayName>Noop Session Management</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.SSO.NoopSSOSessionProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
        </TechnicalProfile>

        <TechnicalProfile Id="SM-Login-MFA">
          <DisplayName>Session Mananagement Provider</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.SSO.DefaultSSOSessionProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" />
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="isActiveLoginMFASession" DefaultValue="true"/>
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="SM-MFA">
          <DisplayName>Session Mananagement Provider</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.SSO.DefaultSSOSessionProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" />
            <PersistedClaim ClaimTypeReferenceId="isActiveMFASession" DefaultValue="true"/>
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="isActiveMFASession"/>
          </OutputClaims>
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Token Issuer</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="JwtIssuer">
          <DisplayName>JSON Web Token Issuer</DisplayName>
          <Protocol Name="None" />
          <OutputTokenFormat>JWT</OutputTokenFormat>
          <Metadata>
            <Item Key="client_id">{service:te}</Item>
            <Item Key="issuer_refresh_token_user_identity_claim_type">objectId</Item>
            <Item Key="AuthenticationContextReferenceClaimPattern">PolicyId</Item>
            <Item Key="IssuanceClaimPattern">AuthorityAndTenantGuid</Item>
            <Item Key="RefreshTokenUserJourneyId">TokenRefresh</Item>
            <Item Key="SendTokenResponseBodyWithJsonNumbers">true</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
            <Key Id="issuer_refresh_token_key" StorageReferenceId="B2C_1A_TokenEncryptionKeyContainer" />
          </CryptographicKeys>
        </TechnicalProfile>

        <TechnicalProfile Id="JsonIssuer">
          <DisplayName>JSON Issuer</DisplayName>
          <Protocol Name="None" />
          <OutputTokenFormat>JSON</OutputTokenFormat>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="response" />
          </InputClaims>
          <OutputClaims />
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Trust Framework Policy Engine</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="TpEngine_c3bd4fe2-1775-4013-b91d-35f16d377d13">
          <DisplayName>Default Trust Framework Policy Engine</DisplayName>
          <Protocol Name="None" />
          <Metadata>
            <Item Key="url">{service:te}</Item>
          </Metadata>
        </TechnicalProfile>

        <TechnicalProfile Id="TpEngine_RefreshToken">
          <DisplayName>Trust Framework Policy Engine Token Refresh</DisplayName>
          <Protocol Name="None" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="refreshTokenIssuedOnDateTime" />
          </OutputClaims>
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>User Journey Context Provider</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="UserJourneyContext">
          <DisplayName>User Journey Context</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.UserJourneyContextProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="correlationId" PartnerClaimType="CorrelationId" />
            <OutputClaim ClaimTypeReferenceId="clientIpAddress" PartnerClaimType="IP-Address" />
          </OutputClaims>
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>PhoneFactor</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="PhoneFactor-InputOrVerify-Login">
          <DisplayName>PhoneFactor</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.PhoneFactorProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.phonefactor</Item>
            <Item Key="ManualPhoneNumberEntryAllowed">true</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateUserIdForMFA" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="userIdForMFA" PartnerClaimType="UserId" />
            <InputClaim ClaimTypeReferenceId="extension_PhoneNumber" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" PartnerClaimType="Verified.OfficePhone" />
            <OutputClaim ClaimTypeReferenceId="newPhoneNumberEntered" PartnerClaimType="newPhoneNumberEntered" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Login-MFA" />
        </TechnicalProfile>

        <TechnicalProfile Id="PhoneFactor-InputOrVerify-WithoutLogin">
          <DisplayName>PhoneFactor</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.PhoneFactorProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.phonefactor</Item>
            <Item Key="ManualPhoneNumberEntryAllowed">true</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateRandomUserIdForMFA" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="userIdForMFA" PartnerClaimType="UserId" />
            <InputClaim ClaimTypeReferenceId="extension_PhoneNumber" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" PartnerClaimType="Verified.OfficePhone" />
            <OutputClaim ClaimTypeReferenceId="newPhoneNumberEntered" PartnerClaimType="newPhoneNumberEntered" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Login-MFA" />
        </TechnicalProfile>

        <TechnicalProfile Id="PhoneFactor-InputOrVerify-MFA">
          <DisplayName>PhoneFactor</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.PhoneFactorProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.phonefactor</Item>
            <Item Key="ManualPhoneNumberEntryAllowed">true</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateUserIdForMFA" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="userIdForMFA" PartnerClaimType="UserId" />
            <InputClaim ClaimTypeReferenceId="extension_PhoneNumber" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" PartnerClaimType="Verified.OfficePhone" />
            <OutputClaim ClaimTypeReferenceId="newPhoneNumberEntered" PartnerClaimType="newPhoneNumberEntered" />
            <OutputClaim ClaimTypeReferenceId="isActiveMFASession" DefaultValue="true" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-MFA" />
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>App Factor</DisplayName>
      <TechnicalProfiles>

        <!-- Demo: The following technical profile registers a verification phone. -->
        <TechnicalProfile Id="AppFactor-Register">
          <DisplayName>App Factor</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.account.appfactor.registration</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" />
            <InputClaim ClaimTypeReferenceId="strongAuthenticationAppQRCodeBitmap" />
            <InputClaim ClaimTypeReferenceId="extension_StrongAuthenticationAppSecretKey" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="strongAuthenticationAppCode" Required="true" />
            <OutputClaim ClaimTypeReferenceId="strongAuthenticationAppQRCodeBitmap" />
            <OutputClaim ClaimTypeReferenceId="extension_StrongAuthenticationAppTimeStepMatched" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AppFactor-VerifyTotpWebHook" />
          </ValidationTechnicalProfiles>
          <!--<UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-PhoneFactor" />-->
        </TechnicalProfile>

        <!-- Demo: The following technical profile asks the user to provide the TOTP code
        and run calls the validation technical profile to validate the TOTP-->
        <TechnicalProfile Id="AppFactor-Challenge">
          <DisplayName>App Factor</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" />
            <InputClaim ClaimTypeReferenceId="extension_StrongAuthenticationAppSecretKey" />
            <InputClaim ClaimTypeReferenceId="extension_StrongAuthenticationAppTimeStepMatched" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="strongAuthenticationAppCode" Required="true" />
            <OutputClaim ClaimTypeReferenceId="extension_StrongAuthenticationAppTimeStepMatched" />
            <OutputClaim ClaimTypeReferenceId="isActiveMFASession" DefaultValue="true" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AppFactor-VerifyTotpWebHook" />
          </ValidationTechnicalProfiles>
          <!--<UseTechnicalProfileForSessionManagement ReferenceId="SSOSession-PhoneFactor" />-->
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

  </ClaimsProviders>

</TrustFrameworkPolicy>
